{
  "paragraphs": [
    {
      "text": "%md\n\n# Binary Classification Algorithms with Pipelines API\n\nName(s): _REIGNEUX Guillaume_\nClass: _BIBD_\n\n\n\u003chr\u003e\n\nDans ce notebook, l\u0027objectif est de tester les algo de classification binaire disponibles dans l\u0027API ML Pipelines sur le jeu de donnée \"Adult\"\n\n**[LIEN VERS LA DOCUMENTATION](http://spark.apache.org/docs/2.0.1/ml-guide.html)**.\n\n\nOn est donc sur de la **prédiction**.\n\n__Objectif :__\n- Commit régulièrement son travail.\n- Complèter l\u0027ensemble de l\u0027analyse.(Evalution de la plus value de la prédiction)\n- Bien penser à commenter pour que Fanilo puisse suivre le chemin de pensé.\n- Si l\u0027envie me prend, je peux partir sur des pistes de reflexion différente de celle qui sont proposés à travers les questions.\n\n\u003chr\u003e\n\n####Table des matières :\n\n* Présentation du jeu de donnée\n* Load Data\n* Descriptive analysis\n* Data Preprocessing\n* Creation of models\n* Conclusion\n\n\u003chr\u003e\n",
      "dateUpdated": "Mar 6, 2017 7:45:56 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1486110006257_-279747651",
      "id": "20170203-082006_1849162249",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch1\u003eBinary Classification Algorithms with Pipelines API\u003c/h1\u003e\n\u003cp\u003eName(s): \u003cem\u003eREIGNEUX Guillaume\u003c/em\u003e\n\u003cbr  /\u003eClass: \u003cem\u003eBIBD\u003c/em\u003e\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eDans ce notebook, l\u0027objectif est de tester les algo de classification binaire disponibles dans l\u0027API ML Pipelines sur le jeu de donnée \u0026ldquo;Adult\u0026rdquo;\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e\u003ca href\u003d\"http://spark.apache.org/docs/2.0.1/ml-guide.html\"\u003eLIEN VERS LA DOCUMENTATION\u003c/a\u003e\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eOn est donc sur de la \u003cstrong\u003eprédiction\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eObjectif :\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCommit régulièrement son travail.\u003c/li\u003e\n\u003cli\u003eComplèter l\u0027ensemble de l\u0027analyse.(Evalution de la plus value de la prédiction)\u003c/li\u003e\n\u003cli\u003eBien penser à commenter pour que Fanilo puisse suivre le chemin de pensé.\u003c/li\u003e\n\u003cli\u003eSi l\u0027envie me prend, je peux partir sur des pistes de reflexion différente de celle qui sont proposés à travers les questions.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch4\u003eTable des matières :\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003ePrésentation du jeu de donnée\u003c/li\u003e\n\u003cli\u003eLoad Data\u003c/li\u003e\n\u003cli\u003eDescriptive analysis\u003c/li\u003e\n\u003cli\u003eData Preprocessing\u003c/li\u003e\n\u003cli\u003eCreation of models\u003c/li\u003e\n\u003cli\u003eConclusion\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n"
      },
      "dateCreated": "Feb 3, 2017 8:20:06 AM",
      "dateStarted": "Mar 6, 2017 7:45:51 AM",
      "dateFinished": "Mar 6, 2017 7:45:51 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n## 1) Jeu de donnée \"Adult\"\n\n**UCI Machine Learning Repository :**\n[Lien vers les données](https://archive.ics.uci.edu/ml/datasets/Adult)\n\n** Information général **\n\n48842 individus\n14 variables :\n- age: continuous\n- workclass: Private, Self-emp-not-inc, Self-emp-inc, Federal-gov, Local-gov, State-gov, Without-pay, Never-worked\n- fnlwgt: continuous\n- education: Bachelors, Some-college, 11th, HS-grad, Prof-school, Assoc-acdm, Assoc-voc...\n- education-num: continuous\n- marital-status: Married-civ-spouse, Divorced, Never-married, Separated, Widowed, Married-spouse-absent...\n- occupation: Tech-support, Craft-repair, Other-service, Sales, Exec-managerial, Prof-specialty, Handlers-cleaners...\n- relationship: Wife, Own-child, Husband, Not-in-family, Other-relative, Unmarried\n- race: White, Asian-Pac-Islander, Amer-Indian-Eskimo, Other, Black\n- sex: Female, Male. \n- capital-gain: continuous\n- capital-loss: continuous\n- hours-per-week: continuous\n- native-country: United-States, Cambodia, England, Puerto-Rico, Canada, Germany...\n\n**Variable à prédire :**\n Est ce que la variable \"income\" est à \u003c\u003d50k ou \u003e50k\n\nLe jeu de donnée est normalement propre.\n\n",
      "dateUpdated": "Mar 6, 2017 7:45:18 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorHide": true,
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1486110092601_361345828",
      "id": "20170203-082132_1615989350",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e1) Jeu de donnée \u0026ldquo;Adult\u0026rdquo;\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eUCI Machine Learning Repository :\u003c/strong\u003e\n\u003cbr  /\u003e\u003ca href\u003d\"https://archive.ics.uci.edu/ml/datasets/Adult\"\u003eLien vers les données\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e\u003c/em\u003e Information général \u003cem\u003e\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e48842 individus\n\u003cbr  /\u003e14 variables :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eage: continuous\u003c/li\u003e\n\u003cli\u003eworkclass: Private, Self-emp-not-inc, Self-emp-inc, Federal-gov, Local-gov, State-gov, Without-pay, Never-worked\u003c/li\u003e\n\u003cli\u003efnlwgt: continuous\u003c/li\u003e\n\u003cli\u003eeducation: Bachelors, Some-college, 11th, HS-grad, Prof-school, Assoc-acdm, Assoc-voc\u0026hellip;\u003c/li\u003e\n\u003cli\u003eeducation-num: continuous\u003c/li\u003e\n\u003cli\u003emarital-status: Married-civ-spouse, Divorced, Never-married, Separated, Widowed, Married-spouse-absent\u0026hellip;\u003c/li\u003e\n\u003cli\u003eoccupation: Tech-support, Craft-repair, Other-service, Sales, Exec-managerial, Prof-specialty, Handlers-cleaners\u0026hellip;\u003c/li\u003e\n\u003cli\u003erelationship: Wife, Own-child, Husband, Not-in-family, Other-relative, Unmarried\u003c/li\u003e\n\u003cli\u003erace: White, Asian-Pac-Islander, Amer-Indian-Eskimo, Other, Black\u003c/li\u003e\n\u003cli\u003esex: Female, Male.\u003c/li\u003e\n\u003cli\u003ecapital-gain: continuous\u003c/li\u003e\n\u003cli\u003ecapital-loss: continuous\u003c/li\u003e\n\u003cli\u003ehours-per-week: continuous\u003c/li\u003e\n\u003cli\u003enative-country: United-States, Cambodia, England, Puerto-Rico, Canada, Germany\u0026hellip;\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eVariable à prédire :\u003c/strong\u003e\n\u003cbr  /\u003eEst ce que la variable \u0026ldquo;income\u0026rdquo; est à \u003c\u003d50k ou \u003e50k\u003c/p\u003e\n\u003cp\u003eLe jeu de donnée est normalement propre.\u003c/p\u003e\n"
      },
      "dateCreated": "Feb 3, 2017 8:21:32 AM",
      "dateStarted": "Mar 6, 2017 7:42:46 AM",
      "dateFinished": "Mar 6, 2017 7:42:46 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n## 2) Chargement des données\n\nI have downloaded adult.data from the [UCI Machine Learning Repository](https://archive.ics.uci.edu/ml/datasets/Adult) and put it into the `data/` folder of your project.\n\nThe following cells will do the necessary to load the data into a DataFrame.",
      "dateUpdated": "Mar 7, 2017 12:44:04 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1486110944465_2111795148",
      "id": "20170203-083544_2073974112",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e2) Chargement des données\u003c/h2\u003e\n\u003cp\u003eI have downloaded adult.data from the \u003ca href\u003d\"https://archive.ics.uci.edu/ml/datasets/Adult\"\u003eUCI Machine Learning Repository\u003c/a\u003e and put it into the \u003ccode\u003edata/\u003c/code\u003e folder of your project.\u003c/p\u003e\n\u003cp\u003eThe following cells will do the necessary to load the data into a DataFrame.\u003c/p\u003e\n"
      },
      "dateCreated": "Feb 3, 2017 8:35:44 AM",
      "dateStarted": "Mar 7, 2017 12:44:03 PM",
      "dateFinished": "Mar 7, 2017 12:44:03 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Load data (run the cell)",
      "text": "import org.apache.spark.sql.types.{StringType, DoubleType, StructType, StructField}\n\nval schema \u003d StructType(Seq(\n    StructField(\"age\", DoubleType),\n    StructField(\"workclass\", StringType),\n    StructField(\"fnlwgt\", DoubleType),\n    StructField(\"education\", StringType),\n    StructField(\"education_num\", DoubleType),\n    StructField(\"marital_status\", StringType),\n    StructField(\"occupation\", StringType),\n    StructField(\"relationship\", StringType),\n    StructField(\"race\", StringType),\n    StructField(\"sex\", StringType),\n    StructField(\"capital_gain\", DoubleType),\n    StructField(\"capital_loss\", DoubleType),\n    StructField(\"hours_per_week\", DoubleType),\n    StructField(\"native_country\", StringType),\n    StructField(\"income\", StringType)\n    ))\n\ncase class Adult(\n    age: Double, \n    workclass: String, \n    fnlwgt: Double, \n    education: String, \n    education_num: Double, \n    marital_status: String, \n    occupation: String, \n    relationship: String, \n    race: String, \n    sex: String, \n    capital_gain: Double, \n    capital_loss: Double, \n    hours_per_week: Double, \n    native_country: String, \n    income: String\n    )\n    \nval dataset \u003d spark.read.schema(schema).csv(\"/opt/dataset/adult.data.csv\").as[Adult]\ndataset.registerTempTable(\"dataset\")  // register it so we can use it inside %sql interpreter",
      "dateUpdated": "Mar 10, 2017 7:00:29 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1486111413898_843508411",
      "id": "20170203-084333_2125853520",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nimport org.apache.spark.sql.types.{StringType, DoubleType, StructType, StructField}\n\nschema: org.apache.spark.sql.types.StructType \u003d StructType(StructField(age,DoubleType,true), StructField(workclass,StringType,true), StructField(fnlwgt,DoubleType,true), StructField(education,StringType,true), StructField(education_num,DoubleType,true), StructField(marital_status,StringType,true), StructField(occupation,StringType,true), StructField(relationship,StringType,true), StructField(race,StringType,true), StructField(sex,StringType,true), StructField(capital_gain,DoubleType,true), StructField(capital_loss,DoubleType,true), StructField(hours_per_week,DoubleType,true), StructField(native_country,StringType,true), StructField(income,StringType,true))\n\ndefined class Adult\n\ndataset: org.apache.spark.sql.Dataset[Adult] \u003d [age: double, workclass: string ... 13 more fields]\n\nwarning: there was one deprecation warning; re-run with -deprecation for details\n"
      },
      "dateCreated": "Feb 3, 2017 8:43:33 AM",
      "dateStarted": "Mar 10, 2017 7:00:29 PM",
      "dateFinished": "Mar 10, 2017 7:01:24 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "dataset.printSchema()",
      "dateUpdated": "Mar 6, 2017 7:44:50 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1486388735078_22636095",
      "id": "20170206-134535_81642944",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "root\n |-- age: double (nullable \u003d true)\n |-- workclass: string (nullable \u003d true)\n |-- fnlwgt: double (nullable \u003d true)\n |-- education: string (nullable \u003d true)\n |-- education_num: double (nullable \u003d true)\n |-- marital_status: string (nullable \u003d true)\n |-- occupation: string (nullable \u003d true)\n |-- relationship: string (nullable \u003d true)\n |-- race: string (nullable \u003d true)\n |-- sex: string (nullable \u003d true)\n |-- capital_gain: double (nullable \u003d true)\n |-- capital_loss: double (nullable \u003d true)\n |-- hours_per_week: double (nullable \u003d true)\n |-- native_country: string (nullable \u003d true)\n |-- income: string (nullable \u003d true)\n\n"
      },
      "dateCreated": "Feb 6, 2017 1:45:35 AM",
      "dateStarted": "Mar 6, 2017 7:43:29 AM",
      "dateFinished": "Mar 6, 2017 7:43:31 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md \n\n## 3) Analyse Descriptive\n\n\u003ch4 style\u003d\"color:red;\"\u003eExercice\u003c/h4\u003e\n\nFournir un récapitulatif statistiques des données pour les variables intéressantes.\nJ\u0027ai fait le choix de faire une revue en prenant en compte directement la variable \"income\" afin de commencer à donner du sens à mon analyse (de plus cela peut potentiellement m\u0027aider à clarifier mes résultats aux moments de la prédiction).\n\n\nDeux manières de faire ceci:\n\n* Faire du requête SQL standard puis .show()\n* Utiliser l\u0027API pour obtenir des représentation graphiques.\n\n\n** Revu d\u0027intérêt pour les variables**\nage: à faire, grosse pertinence par rapport au revenu (expérience)\nworkclass: pertinent aussi\nfnlwgt: pas réussi à trouver à quoi cela correspondait\neducation: à coupler avec education_num\neducation_num: \nmarital_status: je ne vois pas trop l\u0027intérêt par rapport au revenu...\noccupation: tout comme work-class mais peut être trop brouillon ?\nrelationship: Comme le marital status je ne vois pas l\u0027intérêt\nrace: si comme j\u0027ai cru le comprendre, les individus sont tous aux USA on peut faire une recherche la dessus par rapport à une éventuelle discrimination raciale\nsex: Intéressant par rapport à l\u0027inégalité salarial entre les sexes\ncapital_gain: pas sur que ça ai une incidence sur le revenu\ncapital_loss: exactement pareil\nhours_per_week: peut être intéressant \"travailler plus pour gagner plus !\"\nnative_country: A voir avec la variable \"race\"\n\n",
      "dateUpdated": "Mar 7, 2017 12:44:16 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1486112392026_-185455167",
      "id": "20170203-085952_1247149665",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e3) Analyse Descriptive\u003c/h2\u003e\n\u003ch4 style\u003d\"color:red;\"\u003eExercice\u003c/h4\u003e\n\u003cp\u003eFournir un récapitulatif statistiques des données pour les variables intéressantes.\n\u003cbr  /\u003eJ\u0027ai fait le choix de faire une revue en prenant en compte directement la variable \u0026ldquo;income\u0026rdquo; afin de commencer à donner du sens à mon analyse (de plus cela peut potentiellement m\u0027aider à clarifier mes résultats aux moments de la prédiction).\u003c/p\u003e\n\u003cp\u003eDeux manières de faire ceci:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFaire du requête SQL standard puis .show()\u003c/li\u003e\n\u003cli\u003eUtiliser l\u0027API pour obtenir des représentation graphiques.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cem\u003e\u003c/em\u003e Revu d\u0027intérêt pour les variables**\n\u003cbr  /\u003eage: à faire, grosse pertinence par rapport au revenu (expérience)\n\u003cbr  /\u003eworkclass: pertinent aussi\n\u003cbr  /\u003efnlwgt: pas réussi à trouver à quoi cela correspondait\n\u003cbr  /\u003eeducation: à coupler avec education_num\n\u003cbr  /\u003eeducation_num:\n\u003cbr  /\u003emarital_status: je ne vois pas trop l\u0027intérêt par rapport au revenu\u0026hellip;\n\u003cbr  /\u003eoccupation: tout comme work-class mais peut être trop brouillon ?\n\u003cbr  /\u003erelationship: Comme le marital status je ne vois pas l\u0027intérêt\n\u003cbr  /\u003erace: si comme j\u0027ai cru le comprendre, les individus sont tous aux USA on peut faire une recherche la dessus par rapport à une éventuelle discrimination raciale\n\u003cbr  /\u003esex: Intéressant par rapport à l\u0027inégalité salarial entre les sexes\n\u003cbr  /\u003ecapital_gain: pas sur que ça ai une incidence sur le revenu\n\u003cbr  /\u003ecapital_loss: exactement pareil\n\u003cbr  /\u003ehours_per_week: peut être intéressant \u0026ldquo;travailler plus pour gagner plus !\u0026rdquo;\n\u003cbr  /\u003enative_country: A voir avec la variable \u0026ldquo;race\u0026rdquo;\u003c/p\u003e\n"
      },
      "dateCreated": "Feb 3, 2017 8:59:52 AM",
      "dateStarted": "Mar 7, 2017 12:44:15 PM",
      "dateFinished": "Mar 7, 2017 12:44:15 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Analyse descriptive : Moyenne d\u0027âge en fonction du salaire",
      "text": "%sql SELECT avg(age), income FROM dataset group by income ",
      "dateUpdated": "Mar 8, 2017 9:40:55 AM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 216.0,
          "optionOpen": true,
          "keys": [
            {
              "name": "avg(age)",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "income",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "avg(age)",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "income",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql",
        "title": true,
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1488831356233_-116781175",
      "id": "20170306-201556_1930241920",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "avg(age)\tincome\n44.24984058155847\t \u003e50K\n36.78373786407767\t \u003c\u003d50K\n"
      },
      "dateCreated": "Mar 6, 2017 8:15:56 AM",
      "dateStarted": "Mar 6, 2017 10:04:26 AM",
      "dateFinished": "Mar 6, 2017 10:04:28 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Analyse descriptive : Distribution des groupes de salaire en fonction du sexe",
      "text": "%sql select sex,income, (100. * count(*) / sum(count(*)) over ()) as pourcentage\r\nfrom dataset\r\ngroup by sex, income",
      "dateUpdated": "Mar 7, 2017 10:27:01 AM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 177.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "sex",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "income",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "yAxis": {
              "name": "income",
              "index": 1.0,
              "aggr": "sum"
            },
            "xAxis": {
              "name": "sex",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1488838037684_-1849777306",
      "id": "20170306-220717_134276265",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "sex\tincome\tpourcentage\n Male\t \u003c\u003d50K\t46.4604895427044623937\n Male\t \u003e50K\t20.4600595804797149965\n Female\t \u003e50K\t3.6208961641227235036\n Female\t \u003c\u003d50K\t29.4585547126930991063\n"
      },
      "dateCreated": "Mar 6, 2017 10:07:17 AM",
      "dateStarted": "Mar 7, 2017 10:22:52 AM",
      "dateFinished": "Mar 7, 2017 10:22:54 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Analyse descriptive : Moyenne d\u0027âge en fonction du salaire",
      "text": "%md\n\nOn commence tout d\u0027abord par observer la moyenne d\u0027âge en fonction de la tranche de salaire.\nEn effet on part du principe que notre salaire augmente au fur et à mesure que nous accumulons de l\u0027expérience.\nCela se vérifie ici avec **8 ans** d\u0027écart environ pour la moyenne d\u0027âge des salaires au dessus de 50k et ceux en dessous de 50k",
      "dateUpdated": "Mar 7, 2017 10:45:10 AM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 119.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "sex",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count(income)",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "sex",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1488838071596_1258871213",
      "id": "20170306-220751_2033404787",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003eOn commence tout d\u0027abord par observer la moyenne d\u0027âge en fonction de la tranche de salaire.\n\u003cbr  /\u003eEn effet on part du principe que notre salaire augmente au fur et à mesure que nous accumulons de l\u0027expérience.\n\u003cbr  /\u003eCela se vérifie ici avec \u003cstrong\u003e8 ans\u003c/strong\u003e d\u0027écart environ pour la moyenne d\u0027âge des salaires au dessus de 50k et ceux en dessous de 50k\u003c/p\u003e\n"
      },
      "dateCreated": "Mar 6, 2017 10:07:51 AM",
      "dateStarted": "Mar 7, 2017 10:31:17 AM",
      "dateFinished": "Mar 7, 2017 10:31:17 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Analyse descriptive : Distribution des groupes de salaire en fonction du sexe",
      "text": "%md\n\nOn s\u0027attaque ensuite à une idée qui voudrait que les hommes soient mieux payés que les femmes pour le même travail.\n\nLe tableau ci dessus nous montre tout d\u0027abord que nos données contiennent beaucoup plus d\u0027homme (46+20\u003d\u003e**64% d\u0027homme** contre **34% de femme** )\n\nSi on part sur une base de 1000 individus on a donc :\n\n1000 * 0,46 \u003d 460 hommes avec un salaire \u003e\u003d50k\n1000 * 0,20 \u003d 200 hommes avec un salaire \u003c50k\n\n1000 * 0,29 \u003d 290 femmes avec un salaire \u003e\u003d50k\n1000 * 0,036 \u003d 36 femmes avec un salaire \u003c50k\n\nRamené au sexe cela nous donne :\n460 / (460+200) \u003d 74 % des hommes avec un salaire \u003e\u003d50k sur l\u0027ensemble des hommes\n290 / (290+36) \u003d 88 % des femmes avec un salaire \u003e\u003d50k sur l\u0027ensemble des femmes\n\nBien entendu, cette analyse est à prendre avec du recul (il faudrait comparer individu par individu pour pouvoir avancer des résultats pertinent, ici cela se peut très bien que les femmes soient moins bien payé que les hommes à poste équivalent, mais que l\u0027échantillon contienne plus de femme à poste à haut salaire ",
      "dateUpdated": "Mar 7, 2017 10:45:02 AM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 86.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "title": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1488882351050_2054595788",
      "id": "20170307-102551_265119461",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003eOn s\u0027attaque ensuite à une idée qui voudrait que les hommes soient mieux payés que les femmes pour le même travail.\u003c/p\u003e\n\u003cp\u003eLe tableau ci dessus nous montre tout d\u0027abord que nos données contiennent beaucoup plus d\u0027homme (46+20\u003d\u003e\u003cstrong\u003e64% d\u0027homme\u003c/strong\u003e contre \u003cstrong\u003e34% de femme\u003c/strong\u003e )\u003c/p\u003e\n\u003cp\u003eSi on part sur une base de 1000 individus on a donc :\u003c/p\u003e\n\u003cp\u003e1000 * 0,46 \u003d 460 hommes avec un salaire \u003e\u003d50k\n\u003cbr  /\u003e1000 * 0,20 \u003d 200 hommes avec un salaire \u0026lt;50k\u003c/p\u003e\n\u003cp\u003e1000 * 0,29 \u003d 290 femmes avec un salaire \u003e\u003d50k\n\u003cbr  /\u003e1000 * 0,036 \u003d 36 femmes avec un salaire \u0026lt;50k\u003c/p\u003e\n\u003cp\u003eRamené au sexe cela nous donne :\n\u003cbr  /\u003e460 / (460+200) \u003d 74 % des hommes avec un salaire \u003e\u003d50k sur l\u0027ensemble des hommes\n\u003cbr  /\u003e290 / (290+36) \u003d 88 % des femmes avec un salaire \u003e\u003d50k sur l\u0027ensemble des femmes\u003c/p\u003e\n\u003cp\u003eBien entendu, cette analyse est à prendre avec du recul (il faudrait comparer individu par individu pour pouvoir avancer des résultats pertinent, ici cela se peut très bien que les femmes soient moins bien payé que les hommes à poste équivalent, mais que l\u0027échantillon contienne plus de femme à poste à haut salaire\u003c/p\u003e\n"
      },
      "dateCreated": "Mar 7, 2017 10:25:51 AM",
      "dateStarted": "Mar 7, 2017 10:44:56 AM",
      "dateFinished": "Mar 7, 2017 10:44:56 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Analyse descriptive : Répartition des individus en fonction du type de salaire et du niveau d\u0027éducation",
      "text": "%sql\r\n\r\nselect education_num,income, (100. * count(*) / sum(count(*)) over ()) as pourcentage\r\nfrom dataset\r\ngroup by education_num, income\r\norder by education_num DESC",
      "dateUpdated": "Mar 9, 2017 9:03:20 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 200.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "education_num",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "pourcentage",
              "index": 2.0,
              "aggr": "sum"
            }
          ],
          "groups": [
            {
              "name": "income",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "scatter": {
            "xAxis": {
              "name": "education_num",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "income",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1488883532846_-898422063",
      "id": "20170307-104532_218080189",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "education_num\tincome\tpourcentage\n16.0\t \u003e50K\t0.9397745769478824360\n16.0\t \u003c\u003d50K\t0.3286139860569392832\n15.0\t \u003e50K\t1.2991001504867786616\n15.0\t \u003c\u003d50K\t0.4698872884739412180\n14.0\t \u003c\u003d50K\t2.3463652836215103959\n14.0\t \u003e50K\t2.9452412395196707718\n13.0\t \u003e50K\t6.8210435797426368969\n13.0\t \u003c\u003d50K\t9.6250115168453057339\n12.0\t \u003c\u003d50K\t2.4630693160529467768\n12.0\t \u003e50K\t0.8138570682718589724\n11.0\t \u003e50K\t1.1086883080986456190\n11.0\t \u003c\u003d50K\t3.1356530819078038144\n10.0\t \u003c\u003d50K\t18.1321212493473787660\n10.0\t \u003e50K\t4.2596971837474279045\n9.0\t \u003c\u003d50K\t27.1060471115751973219\n9.0\t \u003e50K\t5.1441909032277878444\n8.0\t \u003c\u003d50K\t1.2284634992782776942\n8.0\t \u003e50K\t0.1013482386904579098\n7.0\t \u003c\u003d50K\t3.4243420042381990725\n7.0\t \u003e50K\t0.1842695248917416541\n6.0\t \u003c\u003d50K\t2.6749792696784496791\n6.0\t \u003e50K\t0.1904118423881330426\n5.0\t \u003c\u003d50K\t1.4956543103713030927\n5.0\t \u003e50K\t0.0829212862012837444\n4.0\t \u003e50K\t0.1228463499278277694\n4.0\t \u003c\u003d50K\t1.8611222014065907067\n3.0\t \u003e50K\t0.0491385399711311078\n3.0\t \u003c\u003d50K\t0.9735573231780350726\n2.0\t \u003e50K\t0.0184269524891741654\n2.0\t \u003c\u003d50K\t0.4975277172077024661\n1.0\t \u003c\u003d50K\t0.1566290961579804060\n"
      },
      "dateCreated": "Mar 7, 2017 10:45:32 AM",
      "dateStarted": "Mar 7, 2017 11:08:59 AM",
      "dateFinished": "Mar 7, 2017 11:09:02 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Analyse descriptive : Explication",
      "text": "%md\n\nL\u0027histogramme ci-dessus nous fourni plusieurs informations intéressante.\n\nEn effet, il nous permet tout d\u0027abord d\u0027obtenir la répartition du niveau d\u0027éducation (on voit bien que pour **9, 10 et 13** les pourcentages sont plus important)\nAinsi nous avons 27+5+18+4+9+6\u003d 69% environ de nos individus concentrés sur trois niveau d\u0027éducations.\n\nLe deuxième fait intéressant ici est de voir que le niveau d\u0027éducation joue visiblement sur l\u0027appartenance à un type de salaire.\nEn effet, seulement les individus dont le **niveau d\u0027éducation est supérieur ou égal à 14** sont **majoritairement** avec des **salaire supérieur à 50k**.\n\nDésormais on va faire le comparatif",
      "dateUpdated": "Mar 7, 2017 11:51:44 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "title": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1488883578286_1857165408",
      "id": "20170307-104618_1355105216",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003eL\u0027histogramme ci-dessus nous fourni plusieurs informations intéressante.\u003c/p\u003e\n\u003cp\u003eEn effet, il nous permet tout d\u0027abord d\u0027obtenir la répartition du niveau d\u0027éducation (on voit bien que pour \u003cstrong\u003e9, 10 et 13\u003c/strong\u003e les pourcentages sont plus important)\n\u003cbr  /\u003eAinsi nous avons 27+5+18+4+9+6\u003d 69% environ de nos individus concentrés sur trois niveau d\u0027éducations.\u003c/p\u003e\n\u003cp\u003eLe deuxième fait intéressant ici est de voir que le niveau d\u0027éducation joue visiblement sur l\u0027appartenance à un type de salaire.\n\u003cbr  /\u003eEn effet, seulement les individus dont le \u003cstrong\u003eniveau d\u0027éducation est supérieur ou égal à 14\u003c/strong\u003e sont \u003cstrong\u003emajoritairement\u003c/strong\u003e avec des \u003cstrong\u003esalaire supérieur à 50k\u003c/strong\u003e\u003c/p\u003e\n"
      },
      "dateCreated": "Mar 7, 2017 10:46:18 AM",
      "dateStarted": "Mar 7, 2017 11:20:44 AM",
      "dateFinished": "Mar 7, 2017 11:20:44 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Analyse descriptive : Individus par rapport au workclass \u0026 groupe de salaire",
      "text": "%sql \r\nselect workclass, income, count(*) \r\nfrom dataset\r\ngroup by workclass, income\r\norder by workclass DESC",
      "dateUpdated": "Mar 7, 2017 12:16:10 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 214.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "workclass",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count(1)",
              "index": 2.0,
              "aggr": "sum"
            }
          ],
          "groups": [
            {
              "name": "income",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "scatter": {
            "xAxis": {
              "name": "workclass",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "income",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1488883582083_1342386703",
      "id": "20170307-104622_810882328",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "workclass\tincome\tcount(1)\n Without-pay\t \u003c\u003d50K\t14\n State-gov\t \u003e50K\t353\n State-gov\t \u003c\u003d50K\t945\n Self-emp-not-inc\t \u003c\u003d50K\t1817\n Self-emp-not-inc\t \u003e50K\t724\n Self-emp-inc\t \u003c\u003d50K\t494\n Self-emp-inc\t \u003e50K\t622\n Private\t \u003e50K\t4963\n Private\t \u003c\u003d50K\t17733\n Never-worked\t \u003c\u003d50K\t7\n Local-gov\t \u003c\u003d50K\t1476\n Local-gov\t \u003e50K\t617\n Federal-gov\t \u003c\u003d50K\t589\n Federal-gov\t \u003e50K\t371\n ?\t \u003e50K\t191\n ?\t \u003c\u003d50K\t1645\n"
      },
      "dateCreated": "Mar 7, 2017 10:46:22 AM",
      "dateStarted": "Mar 7, 2017 12:02:18 PM",
      "dateFinished": "Mar 7, 2017 12:02:21 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Analyse descriptive : Par rapport à l\u0027occupation",
      "text": "%sql \r\nselect occupation, income, count(*) \r\nfrom dataset\r\ngroup by occupation, income\r\norder by occupation DESC",
      "dateUpdated": "Mar 7, 2017 12:08:24 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 194.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "occupation",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count(1)",
              "index": 2.0,
              "aggr": "sum"
            }
          ],
          "groups": [
            {
              "name": "income",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "scatter": {
            "xAxis": {
              "name": "occupation",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "income",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1488888204853_-988016080",
      "id": "20170307-120324_496167702",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "occupation\tincome\tcount(1)\n Transport-moving\t \u003c\u003d50K\t1277\n Transport-moving\t \u003e50K\t320\n Tech-support\t \u003e50K\t283\n Tech-support\t \u003c\u003d50K\t645\n Sales\t \u003c\u003d50K\t2667\n Sales\t \u003e50K\t983\n Protective-serv\t \u003e50K\t211\n Protective-serv\t \u003c\u003d50K\t438\n Prof-specialty\t \u003c\u003d50K\t2281\n Prof-specialty\t \u003e50K\t1859\n Priv-house-serv\t \u003c\u003d50K\t148\n Priv-house-serv\t \u003e50K\t1\n Other-service\t \u003c\u003d50K\t3158\n Other-service\t \u003e50K\t137\n Machine-op-inspct\t \u003c\u003d50K\t1752\n Machine-op-inspct\t \u003e50K\t250\n Handlers-cleaners\t \u003c\u003d50K\t1284\n Handlers-cleaners\t \u003e50K\t86\n Farming-fishing\t \u003c\u003d50K\t879\n Farming-fishing\t \u003e50K\t115\n Exec-managerial\t \u003e50K\t1968\n Exec-managerial\t \u003c\u003d50K\t2098\n Craft-repair\t \u003e50K\t929\n Craft-repair\t \u003c\u003d50K\t3170\n Armed-Forces\t \u003c\u003d50K\t8\n Armed-Forces\t \u003e50K\t1\n Adm-clerical\t \u003c\u003d50K\t3263\n Adm-clerical\t \u003e50K\t507\n ?\t \u003e50K\t191\n ?\t \u003c\u003d50K\t1652\n"
      },
      "dateCreated": "Mar 7, 2017 12:03:24 PM",
      "dateStarted": "Mar 7, 2017 12:04:45 PM",
      "dateFinished": "Mar 7, 2017 12:04:48 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Analyse Descriptive : Explication",
      "text": "%md\n\nPlusieurs constat sont à faire ici :\n* Tout d\u0027abord, quelque soit la \"workclass\", la proportion d\u0027individus avec des salaires inférieures à 50k est toujours supérieurs.\n* Ensuite parmis les types d\u0027occupation, on constate que les catégories \"Prof-speciality\" et \"Exec-managerial\" ont les ratio les plus équilibrés \u003d\u003e **44%** de salaire au dessus de 50k pour les enseignants, **48%** pour les manageurs.\n",
      "dateUpdated": "Mar 7, 2017 12:14:49 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1488888513637_-1121479620",
      "id": "20170307-120833_217261786",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003ePlusieurs constat sont à faire ici :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTout d\u0027abord, quelque soit la \u0026ldquo;workclass\u0026rdquo;, la proportion d\u0027individus avec des salaires inférieures à 50k est toujours supérieurs.\u003c/li\u003e\n\u003cli\u003eEnsuite parmis les types d\u0027occupation, on constate que les catégories \u0026ldquo;Prof-speciality\u0026rdquo; et \u0026ldquo;Exec-managerial\u0026rdquo; ont les ratio les plus équilibrés \u003d\u003e \u003cstrong\u003e44%\u003c/strong\u003e de salaire au dessus de 50k pour les enseignants, \u003cstrong\u003e48%\u003c/strong\u003e pour les manageurs.\u003c/li\u003e\n\u003c/ul\u003e\n"
      },
      "dateCreated": "Mar 7, 2017 12:08:33 PM",
      "dateStarted": "Mar 7, 2017 12:14:47 PM",
      "dateFinished": "Mar 7, 2017 12:14:47 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Analyse Descriptive : Individus par Ethnies et type de salaire",
      "text": "%sql \r\nselect race, income, count(*) \r\nfrom dataset\r\ngroup by race, income\r\norder by race DESC",
      "dateUpdated": "Mar 9, 2017 9:29:20 AM",
      "config": {
        "colWidth": 7.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 250.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "race",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count(1)",
              "index": 2.0,
              "aggr": "sum"
            }
          ],
          "groups": [
            {
              "name": "income",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "scatter": {
            "xAxis": {
              "name": "race",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "income",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1488888918795_-1688652573",
      "id": "20170307-121518_964947874",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "race\tincome\tcount(1)\n White\t \u003c\u003d50K\t20699\n White\t \u003e50K\t7117\n Other\t \u003c\u003d50K\t246\n Other\t \u003e50K\t25\n Black\t \u003e50K\t387\n Black\t \u003c\u003d50K\t2737\n Asian-Pac-Islander\t \u003e50K\t276\n Asian-Pac-Islander\t \u003c\u003d50K\t763\n Amer-Indian-Eskimo\t \u003c\u003d50K\t275\n Amer-Indian-Eskimo\t \u003e50K\t36\n"
      },
      "dateCreated": "Mar 7, 2017 12:15:18 PM",
      "dateStarted": "Mar 7, 2017 12:16:35 PM",
      "dateFinished": "Mar 7, 2017 12:16:38 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Analyse Descriptive : Par pays de naissance (sauf USA)",
      "text": "%sql \r\nselect native_country, income, count(*) \r\nfrom dataset\r\nwhere native_country NOT LIKE \u0027%United-States%\u0027\r\ngroup by native_country, income\r\norder by native_country DESC",
      "dateUpdated": "Mar 7, 2017 12:27:03 PM",
      "config": {
        "colWidth": 5.0,
        "graph": {
          "mode": "table",
          "height": 224.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "native_country",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count(1)",
              "index": 2.0,
              "aggr": "sum"
            }
          ],
          "groups": [
            {
              "name": "income",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "scatter": {
            "xAxis": {
              "name": "native_country",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "income",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1488889056761_706792435",
      "id": "20170307-121736_1637349982",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "native_country\tincome\tcount(1)\n Yugoslavia\t \u003c\u003d50K\t10\n Yugoslavia\t \u003e50K\t6\n Vietnam\t \u003e50K\t5\n Vietnam\t \u003c\u003d50K\t62\n Trinadad\u0026Tobago\t \u003c\u003d50K\t17\n Trinadad\u0026Tobago\t \u003e50K\t2\n Thailand\t \u003c\u003d50K\t15\n Thailand\t \u003e50K\t3\n Taiwan\t \u003c\u003d50K\t31\n Taiwan\t \u003e50K\t20\n South\t \u003c\u003d50K\t64\n South\t \u003e50K\t16\n Scotland\t \u003e50K\t3\n Scotland\t \u003c\u003d50K\t9\n Puerto-Rico\t \u003c\u003d50K\t102\n Puerto-Rico\t \u003e50K\t12\n Portugal\t \u003e50K\t4\n Portugal\t \u003c\u003d50K\t33\n Poland\t \u003e50K\t12\n Poland\t \u003c\u003d50K\t48\n Philippines\t \u003e50K\t61\n Philippines\t \u003c\u003d50K\t137\n Peru\t \u003c\u003d50K\t29\n Peru\t \u003e50K\t2\n Outlying-US(Guam-USVI-etc)\t \u003c\u003d50K\t14\n Nicaragua\t \u003e50K\t2\n Nicaragua\t \u003c\u003d50K\t32\n Mexico\t \u003c\u003d50K\t610\n Mexico\t \u003e50K\t33\n Laos\t \u003c\u003d50K\t16\n Laos\t \u003e50K\t2\n Japan\t \u003c\u003d50K\t38\n Japan\t \u003e50K\t24\n Jamaica\t \u003c\u003d50K\t71\n Jamaica\t \u003e50K\t10\n Italy\t \u003c\u003d50K\t48\n Italy\t \u003e50K\t25\n Ireland\t \u003e50K\t5\n Ireland\t \u003c\u003d50K\t19\n Iran\t \u003c\u003d50K\t25\n Iran\t \u003e50K\t18\n India\t \u003e50K\t40\n India\t \u003c\u003d50K\t60\n Hungary\t \u003c\u003d50K\t10\n Hungary\t \u003e50K\t3\n Hong\t \u003c\u003d50K\t14\n Hong\t \u003e50K\t6\n Honduras\t \u003e50K\t1\n Honduras\t \u003c\u003d50K\t12\n Holand-Netherlands\t \u003c\u003d50K\t1\n Haiti\t \u003e50K\t4\n Haiti\t \u003c\u003d50K\t40\n Guatemala\t \u003c\u003d50K\t61\n Guatemala\t \u003e50K\t3\n Greece\t \u003e50K\t8\n Greece\t \u003c\u003d50K\t21\n Germany\t \u003c\u003d50K\t93\n Germany\t \u003e50K\t44\n France\t \u003c\u003d50K\t17\n France\t \u003e50K\t12\n England\t \u003c\u003d50K\t60\n England\t \u003e50K\t30\n El-Salvador\t \u003e50K\t9\n El-Salvador\t \u003c\u003d50K\t97\n Ecuador\t \u003e50K\t4\n Ecuador\t \u003c\u003d50K\t24\n Dominican-Republic\t \u003c\u003d50K\t68\n Dominican-Republic\t \u003e50K\t2\n Cuba\t \u003c\u003d50K\t70\n Cuba\t \u003e50K\t25\n Columbia\t \u003c\u003d50K\t57\n Columbia\t \u003e50K\t2\n China\t \u003e50K\t20\n China\t \u003c\u003d50K\t55\n Canada\t \u003c\u003d50K\t82\n Canada\t \u003e50K\t39\n Cambodia\t \u003e50K\t7\n Cambodia\t \u003c\u003d50K\t12\n ?\t \u003e50K\t146\n ?\t \u003c\u003d50K\t437\n"
      },
      "dateCreated": "Mar 7, 2017 12:17:36 PM",
      "dateStarted": "Mar 7, 2017 12:24:31 PM",
      "dateFinished": "Mar 7, 2017 12:24:34 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Analyse Descriptive : Explication",
      "text": "%md\n\nL\u0027objectif ici est de trouver des disparités dans les salaires en fonction de l\u0027éthnie ainsi que du pays de naissance:\n* Concernant les pays, l\u0027ensemble des possibilités pour \"native_country\" empêche toute analyse graphique (et ce même en excluant les Etats-Unis qui écrasaient les autres variables à cause de son poid.\n* On fait donc notre observation sur l\u0027ethnie :\n\n\nEthnie|Nombre total   |% au dessus de 50k\nBlanc               27876  \u003d\u003e                **25,7%**\nNoir                 3124  \u003d\u003e               **12,3%**\nAsiatique            1039  \u003d\u003e               **26,5%**\nAmer-Indien           311  \u003d\u003e              **11,5%**\nAutre                 271  \u003d\u003e                **12,3%**\n\n",
      "dateUpdated": "Mar 7, 2017 12:39:57 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1488889517063_1935002869",
      "id": "20170307-122517_1761425912",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003eL\u0027objectif ici est de trouver des disparités dans les salaires en fonction de l\u0027éthnie ainsi que du pays de naissance:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eConcernant les pays, l\u0027ensemble des possibilités pour \u0026ldquo;native_country\u0026rdquo; empêche toute analyse graphique (et ce même en excluant les Etats-Unis qui écrasaient les autres variables à cause de son poid.\u003c/li\u003e\n\u003cli\u003eOn fait donc notre observation sur l\u0027ethnie :\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eEthnie|Nombre total   |% au dessus de 50k\n\u003cbr  /\u003eBlanc               27876  \u003d\u003e                \u003cstrong\u003e25,7%\u003c/strong\u003e\n\u003cbr  /\u003eNoir                 3124  \u003d\u003e               \u003cstrong\u003e12,3%\u003c/strong\u003e\n\u003cbr  /\u003eAsiatique            1039  \u003d\u003e               \u003cstrong\u003e26,5%\u003c/strong\u003e\n\u003cbr  /\u003eAmer-Indien           311  \u003d\u003e              \u003cstrong\u003e11,5%\u003c/strong\u003e\n\u003cbr  /\u003eAutre                 271  \u003d\u003e                \u003cstrong\u003e12,3%\u003c/strong\u003e\u003c/p\u003e\n"
      },
      "dateCreated": "Mar 7, 2017 12:25:17 PM",
      "dateStarted": "Mar 7, 2017 12:39:50 PM",
      "dateFinished": "Mar 7, 2017 12:39:50 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md \n## 4) Prétraitement des données\n\nL\u0027objectif ici est de binariser les variables qualitative en utilisant le **OneHotEncoding**\n\nPourquoi binariser ? \n\u003d\u003e Pas possible de faire de la régression logistique avec de la variable qualitative.\n\n[One-Hot Encoding documentation](http://spark.apache.org/docs/latest/ml-features.html#onehotencoder)\n\nOn aura donc en sortie des vecteurs binaires avec une valeur positive \u003d\u003e (Blue: 1, 0, 0), (Green: 0, 1, 0), (Red: 0, 0, 1)\n",
      "dateUpdated": "Mar 9, 2017 12:39:56 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1486112592655_-113447470",
      "id": "20170203-090312_1355361868",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e4) Prétraitement des données\u003c/h2\u003e\n\u003cp\u003eL\u0027objectif ici est de binariser les variables qualitative en utilisant le \u003cstrong\u003eOneHotEncoding\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003ePourquoi binariser ?\n\u003cbr  /\u003e\u003d\u003e Pas possible de faire de la régression logistique avec de la variable qualitative.\u003c/p\u003e\n\u003cp\u003e\u003ca href\u003d\"http://spark.apache.org/docs/latest/ml-features.html#onehotencoder\"\u003eOne-Hot Encoding documentation\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eOn aura donc en sortie des vecteurs binaires avec une valeur positive \u003d\u003e (Blue: 1, 0, 0), (Green: 0, 1, 0), (Red: 0, 0, 1)\u003c/p\u003e\n"
      },
      "dateCreated": "Feb 3, 2017 9:03:12 AM",
      "dateStarted": "Mar 9, 2017 12:39:48 PM",
      "dateFinished": "Mar 9, 2017 12:39:48 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "One-hot encoding example",
      "text": "val names \u003d Seq(\"color\", \"index\", \"OHE_attr1\", \"OHE_attr2\", \"OHE_attr3\")\nsqlContext.createDataFrame(sc.parallelize(Seq((\"Blue\", 0, 1, 0, 0), (\"Green\", 1, 0, 1, 0), (\"Red\", 2, 0 , 0 , 1)))).toDF(names: _*).show()",
      "dateUpdated": "Mar 8, 2017 9:43:55 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1486112775316_925418888",
      "id": "20170203-090615_788237777",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nnames: Seq[String] \u003d List(color, index, OHE_attr1, OHE_attr2, OHE_attr3)\n+-----+-----+---------+---------+---------+\n|color|index|OHE_attr1|OHE_attr2|OHE_attr3|\n+-----+-----+---------+---------+---------+\n| Blue|    0|        1|        0|        0|\n|Green|    1|        0|        1|        0|\n|  Red|    2|        0|        0|        1|\n+-----+-----+---------+---------+---------+\n\n"
      },
      "dateCreated": "Feb 3, 2017 9:06:15 AM",
      "dateStarted": "Feb 7, 2017 12:55:53 PM",
      "dateFinished": "Feb 7, 2017 12:55:55 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\nDeux types de variables qualitatives dans notre jeu de donnée :\n* variables ordinales (Preschool - Doctorate)\n* variables nominales (Wife, Husband, Own-child, etc)\n\nOn utilise une combinaison de OneHotEncoder et StringIndexer pour gérer ses disparités.\n\n[Documentation StringIndexer](http://spark.apache.org/docs/latest/ml-features.html#stringindexer)\n\nLe OneHotEncoder reçoit des objets SparseVector : (8, [4], [1.0]) Le vecteur est de taille 8 et à une seule valeur (la quatrième ici) \u003d 1.0\n\nOn va utilise l\u0027exemple du ML Pipeline pour simplifier notre code \n\n\nPuisque nous aurons de nombreuses étapes de transformation des caractéristiques, nous utilisons un pipeline ML pour lier les étapes ensemble. Cela simplifie notre code. Vous devriez surtout essayer d\u0027utiliser l\u0027exemple Pipeline.\n\n[Documentation ML Pipeline](http://spark.apache.org/docs/latest/ml-pipeline.html)\n[Exemple ML Pipeline](http://spark.apache.org/docs/latest/ml-pipeline.html#example-pipeline)\n\nDe plus pour effectuer du machine learning sur notre jeu de donnée, on va avoir besoin d\u0027une colonne qui contient un vecteur de toute les valeurs et une colonne avec l\u0027étiquette correspondante.\nPour cela, on va utiliser le VectorAssembler.\n\n[Documentation VectorAssembler](http://spark.apache.org/docs/latest/ml-features.html#vectorassembler)\n\n\n```scala\n// Configure an ML pipeline, which consists of two stages on one column: a StringIndexer and a OneHotEncoder.\nimport org.apache.spark.ml.feature.{OneHotEncoder, StringIndexer}\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\n\n// stages for column workclass\nval stringIndexer \u003d new StringIndexer()\n  .setInputCol(\"workclass\")\n  .setOutputCol(\"workclassIndex\")\nval oneHotEncoder \u003d new OneHotEncoder()\n  .setInputCol(stringIndexer.getOutputCol)\n  .setOutputCol(stringIndexer.getInputCol + \"ClassVec\")\n  \n// stage for label\nval label_stringIdx \u003d new StringIndexer()\n    .setInputCol(\"income\")\n    .setOutputCol(\"label\")\n  \nval stages \u003d  Seq(stringIndexer, oneHotEncoder) ++ Seq(label_stringIdx) // concatenate 2 sequences of stages\nval pipeline \u003d new Pipeline()\n  .setStages(stages.toArray)\n  \nval pipelineModel \u003d pipeline.fit(dataset)\npipelineModel.transform(dataset).show()\n```\n\n**Objectif :**\n* Construire un StringIndexer et un OneHotEncoder pour chaque variable qualitative.\n* Transformer le \"income en une étiquette de \"label\".\n* Utiliser le VectorAssembler \n* Passer les résultats et afficher le résultat. Commenter. (Entre autre la colonne \"features\")\n",
      "dateUpdated": "Mar 9, 2017 1:03:40 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1486113072470_-2067898551",
      "id": "20170203-091112_917554483",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003eDeux types de variables qualitatives dans notre jeu de donnée :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003evariables ordinales (Preschool - Doctorate)\u003c/li\u003e\n\u003cli\u003evariables nominales (Wife, Husband, Own-child, etc)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOn utilise une combinaison de OneHotEncoder et StringIndexer pour gérer ses disparités.\u003c/p\u003e\n\u003cp\u003e\u003ca href\u003d\"http://spark.apache.org/docs/latest/ml-features.html#stringindexer\"\u003eDocumentation StringIndexer\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eLe OneHotEncoder reçoit des objets SparseVector : (8, [4], [1.0]) Le vecteur est de taille 8 et à une seule valeur (la quatrième ici) \u003d 1.0\u003c/p\u003e\n\u003cp\u003eOn va utilise l\u0027exemple du ML Pipeline pour simplifier notre code\u003c/p\u003e\n\u003cp\u003ePuisque nous aurons de nombreuses étapes de transformation des caractéristiques, nous utilisons un pipeline ML pour lier les étapes ensemble. Cela simplifie notre code. Vous devriez surtout essayer d\u0027utiliser l\u0027exemple Pipeline.\u003c/p\u003e\n\u003cp\u003e\u003ca href\u003d\"http://spark.apache.org/docs/latest/ml-pipeline.html\"\u003eDocumentation ML Pipeline\u003c/a\u003e\n\u003cbr  /\u003e\u003ca href\u003d\"http://spark.apache.org/docs/latest/ml-pipeline.html#example-pipeline\"\u003eExemple ML Pipeline\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDe plus pour effectuer du machine learning sur notre jeu de donnée, on va avoir besoin d\u0027une colonne qui contient un vecteur de toute les valeurs et une colonne avec l\u0027étiquette correspondante.\n\u003cbr  /\u003ePour cela, on va utiliser le VectorAssembler.\u003c/p\u003e\n\u003cp\u003e\u003ca href\u003d\"http://spark.apache.org/docs/latest/ml-features.html#vectorassembler\"\u003eDocumentation VectorAssembler\u003c/a\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class\u003d\"scala\"\u003e// Configure an ML pipeline, which consists of two stages on one column: a StringIndexer and a OneHotEncoder.\nimport org.apache.spark.ml.feature.{OneHotEncoder, StringIndexer}\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\n\n// stages for column workclass\nval stringIndexer \u003d new StringIndexer()\n  .setInputCol(\"workclass\")\n  .setOutputCol(\"workclassIndex\")\nval oneHotEncoder \u003d new OneHotEncoder()\n  .setInputCol(stringIndexer.getOutputCol)\n  .setOutputCol(stringIndexer.getInputCol + \"ClassVec\")\n\n// stage for label\nval label_stringIdx \u003d new StringIndexer()\n    .setInputCol(\"income\")\n    .setOutputCol(\"label\")\n\nval stages \u003d  Seq(stringIndexer, oneHotEncoder) ++ Seq(label_stringIdx) // concatenate 2 sequences of stages\nval pipeline \u003d new Pipeline()\n  .setStages(stages.toArray)\n\nval pipelineModel \u003d pipeline.fit(dataset)\npipelineModel.transform(dataset).show()\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003eObjectif :\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eConstruire un StringIndexer et un OneHotEncoder pour chaque variable qualitative.\u003c/li\u003e\n\u003cli\u003eTransformer le \u0026ldquo;income en une étiquette de \u0026ldquo;label\u0026rdquo;.\u003c/li\u003e\n\u003cli\u003eUtiliser le VectorAssembler\u003c/li\u003e\n\u003cli\u003ePasser les résultats et afficher le résultat. Commenter. (Entre autre la colonne \u0026ldquo;features\u0026rdquo;)\u003c/li\u003e\n\u003c/ul\u003e\n"
      },
      "dateCreated": "Feb 3, 2017 9:11:12 AM",
      "dateStarted": "Mar 9, 2017 1:01:29 AM",
      "dateFinished": "Mar 9, 2017 1:01:30 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "StringIndexer \u0026 OneHotEncoder \u0026 VectorAssembler \u0026 ML Pipeline",
      "text": "// On reprend les import du dessus pour le OHE et le SI\nimport org.apache.spark.ml.feature.{OneHotEncoder, StringIndexer}\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\n//Puis suite à nos besoins on recupère aussi VectorAssembler\nimport org.apache.spark.ml.feature.{VectorAssembler}\n\n\n// On construit le OneHotEncoder et le StringIndexer pour toute les variables données\ndef prepadata(w: String) \u003d \n{\n    \n    \n// On ajoute au nom de colonne \"Index\"\nval stringIndexer \u003d new StringIndexer()\n    .setInputCol(w)\n    .setOutputCol(w+\"Index\")\n\n// On ajoute au nom de colonne \"ClassVec\"  \nval oneHotEncoder \u003d new OneHotEncoder()\n   .setInputCol(stringIndexer.getOutputCol)\n   .setOutputCol(stringIndexer.getInputCol + \"ClassVec\")\n   \n// On renvoit le StringIndexer et le OneHotEncoder\nSeq(stringIndexer, oneHotEncoder)\n\n}\n\n\n//\"Detail colomns to deal with\" \u003d\u003e on a donc les colonnes qu\u0027on veut binariser.\nval categoricalCols \u003d Seq(\"workclass\", \"education\", \"marital_status\", \"occupation\", \"relationship\", \"race\", \"sex\", \"native_country\")\nval numericCols \u003d Seq(\"age\", \"fnlwgt\", \"education_num\", \"capital_gain\", \"capital_loss\", \"hours_per_week\")\n\n\n// On passe par flatMap pour changer les labels.\nval stages \u003d categoricalCols.flatMap(prepadata)\n\n// Modification du label pour \"income\"\nval label_stringIdx \u003d new StringIndexer()\n    .setInputCol(\"income\")\n    .setOutputCol(\"label\")\n\n\n\n// Combine une liste de colonnes (suffixées par ClassVec) en un vecteur de colonnes\nval assemblerStage \u003d new VectorAssembler().setInputCols(categoricalCols.map(w \u003d\u003e w + \"ClassVec\").toArray).setOutputCol(\"features\")\n\nval stages2 \u003d stages ++ Seq(label_stringIdx)  ++ Seq(assemblerStage)\n\n// Création du pipeline et ajout des étapes\nval pipeline \u003d new Pipeline().setStages(stages2.toArray)\n\n// Adapte le pipeline au jeu de données d\u0027entrée dataset.\n// Nous obtenons un model que nous appliquons sur les données pour les tranformer.\nval pipelineModel \u003d pipeline.fit(dataset)\n\n// concatenate 2 sequences of stages\nval pipeline \u003d new Pipeline()\n  .setStages(stages.toArray)\n\n// Affichage du pipeline\npipelineModel.transform(dataset).show()\n\n// On stocke nos résultats\nval newdataset \u003d pipelineModel.transform(dataset)\n\n\n",
      "dateUpdated": "Mar 10, 2017 7:01:37 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1489014619781_461726989",
      "id": "20170308-231019_586273888",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nimport org.apache.spark.ml.feature.{OneHotEncoder, StringIndexer}\n\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\n\nimport org.apache.spark.ml.feature.VectorAssembler\n\nprepadata: (w: String)Seq[org.apache.spark.ml.PipelineStage with org.apache.spark.ml.param.shared.HasOutputCol with org.apache.spark.ml.param.shared.HasInputCol with org.apache.spark.ml.util.DefaultParamsWritable{def copy(extra: org.apache.spark.ml.param.ParamMap): org.apache.spark.ml.PipelineStage with org.apache.spark.ml.param.shared.HasOutputCol with org.apache.spark.ml.param.shared.HasInputCol with org.apache.spark.ml.util.DefaultParamsWritable{def copy(extra: org.apache.spark.ml.param.ParamMap): org.apache.spark.ml.PipelineStage with org.apache.spark.ml.param.shared.HasOutputCol with org.apache.spark.ml.param.shared.HasInputCol with org.apache.spark.ml.util.DefaultParamsWritable}}]\n\ncategoricalCols: Seq[String] \u003d List(workclass, education, marital_status, occupation, relationship, race, sex, native_country)\n\nnumericCols: Seq[String] \u003d List(age, fnlwgt, education_num, capital_gain, capital_loss, hours_per_week)\nstages: Seq[org.apache.spark.ml.PipelineStage with org.apache.spark.ml.param.shared.HasOutputCol with org.apache.spark.ml.param.shared.HasInputCol with org.apache.spark.ml.util.DefaultParamsWritable{def copy(extra: org.apache.spark.ml.param.ParamMap): org.apache.spark.ml.PipelineStage with org.apache.spark.ml.param.shared.HasOutputCol with org.apache.spark.ml.param.shared.HasInputCol with org.apache.spark.ml.util.DefaultParamsWritable{def copy(extra: org.apache.spark.ml.param.ParamMap): org.apache.spark.ml.PipelineStage with org.apache.spark.ml.param.shared.HasOutputCol with org.apache.spark.ml.param.shared.HasInputCol with org.apache.spark.ml.util.DefaultParamsWritable}}] \u003d List(strIdx_266bd48d7567, oneHot_03e060920ce4, strIdx_23c7261c2fc3, oneHot_0825edaac091, strIdx_fa6aee8d45c8, one...\nlabel_stringIdx: org.apache.spark.ml.feature.StringIndexer \u003d strIdx_60cedd201c9a\n\nassemblerStage: org.apache.spark.ml.feature.VectorAssembler \u003d vecAssembler_19a83ec3242d\nstages2: Seq[org.apache.spark.ml.PipelineStage with org.apache.spark.ml.param.shared.HasOutputCol with org.apache.spark.ml.util.DefaultParamsWritable{def copy(extra: org.apache.spark.ml.param.ParamMap): org.apache.spark.ml.PipelineStage with org.apache.spark.ml.param.shared.HasOutputCol with org.apache.spark.ml.util.DefaultParamsWritable{def copy(extra: org.apache.spark.ml.param.ParamMap): org.apache.spark.ml.PipelineStage with org.apache.spark.ml.param.shared.HasOutputCol with org.apache.spark.ml.util.DefaultParamsWritable}}] \u003d List(strIdx_266bd48d7567, oneHot_03e060920ce4, strIdx_23c7261c2fc3, oneHot_0825edaac091, strIdx_fa6aee8d45c8, oneHot_f1e6147b484f, strIdx_d23cce28cd01, oneHot_6e09dde6b0f7, strIdx_36e36d0c9a49, oneHot_21f41afc1090, strIdx_02d09c143f12, oneHot_fcefa3dcb376, strId...\npipeline: org.apache.spark.ml.Pipeline \u003d pipeline_3c74e02988ea\n\npipelineModel: org.apache.spark.ml.PipelineModel \u003d pipeline_3c74e02988ea\n\npipeline: org.apache.spark.ml.Pipeline \u003d pipeline_931f82f932f1\nn| age|        workclass|  fnlwgt|    education|education_num|      marital_status|        occupation|  relationship|               race|    sex|capital_gain|capital_loss|hours_per_week|native_country|income|workclassIndex|workclassClassVec|educationIndex|educationClassVec|marital_statusIndex|marital_statusClassVec|occupationIndex|occupationClassVec|relationshipIndex|relationshipClassVec|raceIndex| raceClassVec|sexIndex|  sexClassVec|native_countryIndex|native_countryClassVec|label|            features|\nn|39.0|        State-gov| 77516.0|    Bachelors|         13.0|       Never-married|      Adm-clerical| Not-in-family|              White|   Male|      2174.0|         0.0|          40.0| United-States| \u003c\u003d50K|           4.0|    (8,[4],[1.0])|           2.0|   (15,[2],[1.0])|                1.0|         (6,[1],[1.0])|            3.0|    (14,[3],[1.0])|              1.0|       (5,[1],[1.0])|      0.0|(4,[0],[1.0])|     0.0|(1,[0],[1.0])|                0.0|        (41,[0],[1.0])|  0.0|(94,[4,10,24,32,4...|\n|50.0| Self-emp-not-inc| 83311.0|    Bachelors|         13.0|  Married-civ-spouse|   Exec-managerial|       Husband|              White|   Male|         0.0|         0.0|          13.0| United-States| \u003c\u003d50K|           1.0|    (8,[1],[1.0])|           2.0|   (15,[2],[1.0])|                0.0|         (6,[0],[1.0])|            2.0|    (14,[2],[1.0])|              0.0|       (5,[0],[1.0])|      0.0|(4,[0],[1.0])|     0.0|(1,[0],[1.0])|                0.0|        (41,[0],[1.0])|  0.0|(94,[1,10,23,31,4...|\n|38.0|          Private|215646.0|      HS-grad|          9.0|            Divorced| Handlers-cleaners| Not-in-family|              White|   Male|         0.0|         0.0|          40.0| United-States| \u003c\u003d50K|           0.0|    (8,[0],[1.0])|           0.0|   (15,[0],[1.0])|                2.0|         (6,[2],[1.0])|            9.0|    (14,[9],[1.0])|              1.0|       (5,[1],[1.0])|      0.0|(4,[0],[1.0])|     0.0|(1,[0],[1.0])|                0.0|        (41,[0],[1.0])|  0.0|(94,[0,8,25,38,44...|\n|53.0|          Private|234721.0|         11th|          7.0|  Married-civ-spouse| Handlers-cleaners|       Husband|              Black|   Male|         0.0|         0.0|          40.0| United-States| \u003c\u003d50K|           0.0|    (8,[0],[1.0])|           5.0|   (15,[5],[1.0])|                0.0|         (6,[0],[1.0])|            9.0|    (14,[9],[1.0])|              0.0|       (5,[0],[1.0])|      1.0|(4,[1],[1.0])|     0.0|(1,[0],[1.0])|                0.0|        (41,[0],[1.0])|  0.0|(94,[0,13,23,38,4...|\n|28.0|          Private|338409.0|    Bachelors|         13.0|  Married-civ-spouse|    Prof-specialty|          Wife|              Black| Female|         0.0|         0.0|          40.0|          Cuba| \u003c\u003d50K|           0.0|    (8,[0],[1.0])|           2.0|   (15,[2],[1.0])|                0.0|         (6,[0],[1.0])|            0.0|    (14,[0],[1.0])|              4.0|       (5,[4],[1.0])|      1.0|(4,[1],[1.0])|     1.0|    (1,[],[])|                9.0|        (41,[9],[1.0])|  0.0|(94,[0,10,23,29,4...|\n|37.0|          Private|284582.0|      Masters|         14.0|  Married-civ-spouse|   Exec-managerial|          Wife|              White| Female|         0.0|         0.0|          40.0| United-States| \u003c\u003d50K|           0.0|    (8,[0],[1.0])|           3.0|   (15,[3],[1.0])|                0.0|         (6,[0],[1.0])|            2.0|    (14,[2],[1.0])|              4.0|       (5,[4],[1.0])|      0.0|(4,[0],[1.0])|     1.0|    (1,[],[])|                0.0|        (41,[0],[1.0])|  0.0|(94,[0,11,23,31,4...|\n|49.0|          Private|160187.0|          9th|          5.0| Married-spouse-a...|     Other-service| Not-in-family|              Black| Female|         0.0|         0.0|          16.0|       Jamaica| \u003c\u003d50K|           0.0|    (8,[0],[1.0])|          10.0|  (15,[10],[1.0])|                5.0|         (6,[5],[1.0])|            5.0|    (14,[5],[1.0])|              1.0|       (5,[1],[1.0])|      1.0|(4,[1],[1.0])|     1.0|    (1,[],[])|               11.0|       (41,[11],[1.0])|  0.0|(94,[0,18,28,34,4...|\n|52.0| Self-emp-not-inc|209642.0|      HS-grad|          9.0|  Married-civ-spouse|   Exec-managerial|       Husband|              White|   Male|         0.0|         0.0|          45.0| United-States|  \u003e50K|           1.0|    (8,[1],[1.0])|           0.0|   (15,[0],[1.0])|                0.0|         (6,[0],[1.0])|            2.0|    (14,[2],[1.0])|              0.0|       (5,[0],[1.0])|      0.0|(4,[0],[1.0])|     0.0|(1,[0],[1.0])|                0.0|        (41,[0],[1.0])|  1.0|(94,[1,8,23,31,43...|\n|31.0|          Private| 45781.0|      Masters|         14.0|       Never-married|    Prof-specialty| Not-in-family|              White| Female|     14084.0|         0.0|          50.0| United-States|  \u003e50K|           0.0|    (8,[0],[1.0])|           3.0|   (15,[3],[1.0])|                1.0|         (6,[1],[1.0])|            0.0|    (14,[0],[1.0])|              1.0|       (5,[1],[1.0])|      0.0|(4,[0],[1.0])|     1.0|    (1,[],[])|                0.0|        (41,[0],[1.0])|  1.0|(94,[0,11,24,29,4...|\n|42.0|          Private|159449.0|    Bachelors|         13.0|  Married-civ-spouse|   Exec-managerial|       Husband|              White|   Male|      5178.0|         0.0|          40.0| United-States|  \u003e50K|           0.0|    (8,[0],[1.0])|           2.0|   (15,[2],[1.0])|                0.0|         (6,[0],[1.0])|            2.0|    (14,[2],[1.0])|              0.0|       (5,[0],[1.0])|      0.0|(4,[0],[1.0])|     0.0|(1,[0],[1.0])|                0.0|        (41,[0],[1.0])|  1.0|(94,[0,10,23,31,4...|\n|37.0|          Private|280464.0| Some-college|         10.0|  Married-civ-spouse|   Exec-managerial|       Husband|              Black|   Male|         0.0|         0.0|          80.0| United-States|  \u003e50K|           0.0|    (8,[0],[1.0])|           1.0|   (15,[1],[1.0])|                0.0|         (6,[0],[1.0])|            2.0|    (14,[2],[1.0])|              0.0|       (5,[0],[1.0])|      1.0|(4,[1],[1.0])|     0.0|(1,[0],[1.0])|                0.0|        (41,[0],[1.0])|  1.0|(94,[0,9,23,31,43...|\n|30.0|        State-gov|141297.0|    Bachelors|         13.0|  Married-civ-spouse|    Prof-specialty|       Husband| Asian-Pac-Islander|   Male|         0.0|         0.0|          40.0|         India|  \u003e50K|           4.0|    (8,[4],[1.0])|           2.0|   (15,[2],[1.0])|                0.0|         (6,[0],[1.0])|            0.0|    (14,[0],[1.0])|              0.0|       (5,[0],[1.0])|      2.0|(4,[2],[1.0])|     0.0|(1,[0],[1.0])|                8.0|        (41,[8],[1.0])|  1.0|(94,[4,10,23,29,4...|\n|23.0|          Private|122272.0|    Bachelors|         13.0|       Never-married|      Adm-clerical|     Own-child|              White| Female|         0.0|         0.0|          30.0| United-States| \u003c\u003d50K|           0.0|    (8,[0],[1.0])|           2.0|   (15,[2],[1.0])|                1.0|         (6,[1],[1.0])|            3.0|    (14,[3],[1.0])|              2.0|       (5,[2],[1.0])|      0.0|(4,[0],[1.0])|     1.0|    (1,[],[])|                0.0|        (41,[0],[1.0])|  0.0|(94,[0,10,24,32,4...|\n|32.0|          Private|205019.0|   Assoc-acdm|         12.0|       Never-married|             Sales| Not-in-family|              Black|   Male|         0.0|         0.0|          50.0| United-States| \u003c\u003d50K|           0.0|    (8,[0],[1.0])|           6.0|   (15,[6],[1.0])|                1.0|         (6,[1],[1.0])|            4.0|    (14,[4],[1.0])|              1.0|       (5,[1],[1.0])|      1.0|(4,[1],[1.0])|     0.0|(1,[0],[1.0])|                0.0|        (41,[0],[1.0])|  0.0|(94,[0,14,24,33,4...|\n|40.0|          Private|121772.0|    Assoc-voc|         11.0|  Married-civ-spouse|      Craft-repair|       Husband| Asian-Pac-Islander|   Male|         0.0|         0.0|          40.0|             ?|  \u003e50K|           0.0|    (8,[0],[1.0])|           4.0|   (15,[4],[1.0])|                0.0|         (6,[0],[1.0])|            1.0|    (14,[1],[1.0])|              0.0|       (5,[0],[1.0])|      2.0|(4,[2],[1.0])|     0.0|(1,[0],[1.0])|                2.0|        (41,[2],[1.0])|  1.0|(94,[0,12,23,30,4...|\n|34.0|          Private|245487.0|      7th-8th|          4.0|  Married-civ-spouse|  Transport-moving|       Husband| Amer-Indian-Eskimo|   Male|         0.0|         0.0|          45.0|        Mexico| \u003c\u003d50K|           0.0|    (8,[0],[1.0])|           8.0|   (15,[8],[1.0])|                0.0|         (6,[0],[1.0])|            8.0|    (14,[8],[1.0])|              0.0|       (5,[0],[1.0])|      3.0|(4,[3],[1.0])|     0.0|(1,[0],[1.0])|                1.0|        (41,[1],[1.0])|  0.0|(94,[0,16,23,37,4...|\n|25.0| Self-emp-not-inc|176756.0|      HS-grad|          9.0|       Never-married|   Farming-fishing|     Own-child|              White|   Male|         0.0|         0.0|          35.0| United-States| \u003c\u003d50K|           1.0|    (8,[1],[1.0])|           0.0|   (15,[0],[1.0])|                1.0|         (6,[1],[1.0])|           10.0|   (14,[10],[1.0])|              2.0|       (5,[2],[1.0])|      0.0|(4,[0],[1.0])|     0.0|(1,[0],[1.0])|                0.0|        (41,[0],[1.0])|  0.0|(94,[1,8,24,39,45...|\n|32.0|          Private|186824.0|      HS-grad|          9.0|       Never-married| Machine-op-inspct|     Unmarried|              White|   Male|         0.0|         0.0|          40.0| United-States| \u003c\u003d50K|           0.0|    (8,[0],[1.0])|           0.0|   (15,[0],[1.0])|                1.0|         (6,[1],[1.0])|            6.0|    (14,[6],[1.0])|              3.0|       (5,[3],[1.0])|      0.0|(4,[0],[1.0])|     0.0|(1,[0],[1.0])|                0.0|        (41,[0],[1.0])|  0.0|(94,[0,8,24,35,46...|\n|38.0|          Private| 28887.0|         11th|          7.0|  Married-civ-spouse|             Sales|       Husband|              White|   Male|         0.0|         0.0|          50.0| United-States| \u003c\u003d50K|           0.0|    (8,[0],[1.0])|           5.0|   (15,[5],[1.0])|                0.0|         (6,[0],[1.0])|            4.0|    (14,[4],[1.0])|              0.0|       (5,[0],[1.0])|      0.0|(4,[0],[1.0])|     0.0|(1,[0],[1.0])|                0.0|        (41,[0],[1.0])|  0.0|(94,[0,13,23,33,4...|\n|43.0| Self-emp-not-inc|292175.0|      Masters|         14.0|            Divorced|   Exec-managerial|     Unmarried|              White| Female|         0.0|         0.0|          45.0| United-States|  \u003e50K|           1.0|    (8,[1],[1.0])|           3.0|   (15,[3],[1.0])|                2.0|         (6,[2],[1.0])|            2.0|    (14,[2],[1.0])|              3.0|       (5,[3],[1.0])|      0.0|(4,[0],[1.0])|     1.0|    (1,[],[])|                0.0|        (41,[0],[1.0])|  1.0|(94,[1,11,25,31,4...|\nnonly showing top 20 rows\n\n\nnewdataset: org.apache.spark.sql.DataFrame \u003d [age: double, workclass: string ... 31 more fields]\n"
      },
      "dateCreated": "Mar 8, 2017 11:10:19 AM",
      "dateStarted": "Mar 10, 2017 7:01:37 PM",
      "dateFinished": "Mar 10, 2017 7:02:05 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Explication 1/2",
      "text": "%md\n\nOn observe que notre code a bien compilé : Notre dataset est désormais binarisé.\n\n**Vérification :**\nNotre pipeline doit ressembler à celà :\n\n\n```\n+----+-----------------+--------+----------+-------------+-------------------+------------------+--------------+------+-----+------------+------------+--------------+--------------+------+--------------+-----------------+--------------+-----------------+-------------------+----------------------+---------------+------------------+-----------------+--------------------+---------+-------------+--------+-------------+-------------------+----------------------+-----+--------------------+\n| age|        workclass|  fnlwgt| education|education_num|     marital_status|        occupation|  relationship|  race|  sex|capital_gain|capital_loss|hours_per_week|native_country|income|workclassIndex|workclassClassVec|educationIndex|educationClassVec|marital_statusIndex|marital_statusClassVec|occupationIndex|occupationClassVec|relationshipIndex|relationshipClassVec|raceIndex| raceClassVec|sexIndex|  sexClassVec|native_countryIndex|native_countryClassVec|label|            features|\n+----+-----------------+--------+----------+-------------+-------------------+------------------+--------------+------+-----+------------+------------+--------------+--------------+------+--------------+-----------------+--------------+-----------------+-------------------+----------------------+---------------+------------------+-----------------+--------------------+---------+-------------+--------+-------------+-------------------+----------------------+-----+--------------------+\n|39.0|        State-gov| 77516.0| Bachelors|         13.0|      Never-married|      Adm-clerical| Not-in-family| White| Male|      2174.0|         0.0|          40.0| United-States| \u003c\u003d50K|           4.0|    (8,[4],[1.0])|           2.0|   (15,[2],[1.0])|                1.0|         (6,[1],[1.0])|            3.0|    (14,[3],[1.0])|              1.0|       (5,[1],[1.0])|      0.0|(4,[0],[1.0])|     0.0|(1,[0],[1.0])|                0.0|        (41,[0],[1.0])|  0.0|(100,[4,10,24,32,...|\n```\n\n\nOn est donc apriori bon pour cette étape.\nSeulement il n\u0027est pas simple d\u0027observer nos données sous cette forme.\nPar exemple pour donner du sens à la colonne **features** on peut seulement se baser sur une information tronquée :\n0.0|(94,[4,10,24,32,4...\nOn va donc essayer de revenir à un format \"sql like\".\nPour cela deux point :\n* Tout d\u0027abord, on va s\u0027appuyer sur le \"newdataset\" pour créer une table au format sql.\n(Recherche du registerTempTable à cause de l\u0027erreur :\nTable or view not found: newdataset; line 2 pos 5\nset zeppelin.spark.sql.stacktrace \u003d true to see full stacktrace )\n* Puis on affiche nos données via sql.\n",
      "dateUpdated": "Mar 9, 2017 11:03:59 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 87.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1486391484536_-1333067431",
      "id": "20170206-143124_969747353",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003eOn observe que notre code a bien compilé : Notre dataset est désormais binarisé.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVérification :\u003c/strong\u003e\n\u003cbr  /\u003eNotre pipeline doit ressembler à celà :\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e+----+-----------------+--------+----------+-------------+-------------------+------------------+--------------+------+-----+------------+------------+--------------+--------------+------+--------------+-----------------+--------------+-----------------+-------------------+----------------------+---------------+------------------+-----------------+--------------------+---------+-------------+--------+-------------+-------------------+----------------------+-----+--------------------+\n| age|        workclass|  fnlwgt| education|education_num|     marital_status|        occupation|  relationship|  race|  sex|capital_gain|capital_loss|hours_per_week|native_country|income|workclassIndex|workclassClassVec|educationIndex|educationClassVec|marital_statusIndex|marital_statusClassVec|occupationIndex|occupationClassVec|relationshipIndex|relationshipClassVec|raceIndex| raceClassVec|sexIndex|  sexClassVec|native_countryIndex|native_countryClassVec|label|            features|\n+----+-----------------+--------+----------+-------------+-------------------+------------------+--------------+------+-----+------------+------------+--------------+--------------+------+--------------+-----------------+--------------+-----------------+-------------------+----------------------+---------------+------------------+-----------------+--------------------+---------+-------------+--------+-------------+-------------------+----------------------+-----+--------------------+\n|39.0|        State-gov| 77516.0| Bachelors|         13.0|      Never-married|      Adm-clerical| Not-in-family| White| Male|      2174.0|         0.0|          40.0| United-States| \u0026lt;\u003d50K|           4.0|    (8,[4],[1.0])|           2.0|   (15,[2],[1.0])|                1.0|         (6,[1],[1.0])|            3.0|    (14,[3],[1.0])|              1.0|       (5,[1],[1.0])|      0.0|(4,[0],[1.0])|     0.0|(1,[0],[1.0])|                0.0|        (41,[0],[1.0])|  0.0|(100,[4,10,24,32,...|\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eOn est donc apriori bon pour cette étape.\n\u003cbr  /\u003eSeulement il n\u0027est pas simple d\u0027observer nos données sous cette forme.\n\u003cbr  /\u003ePar exemple pour donner du sens à la colonne \u003cstrong\u003efeatures\u003c/strong\u003e on peut seulement se baser sur une information tronquée :\n\u003cbr  /\u003e0.0|(94,[4,10,24,32,4\u0026hellip;\n\u003cbr  /\u003eOn va donc essayer de revenir à un format \u0026ldquo;sql like\u0026rdquo;.\n\u003cbr  /\u003ePour cela deux point :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTout d\u0027abord, on va s\u0027appuyer sur le \u0026ldquo;newdataset\u0026rdquo; pour créer une table au format sql.\n\u003cbr  /\u003e(Recherche du registerTempTable à cause de l\u0027erreur :\n\u003cbr  /\u003eTable or view not found: newdataset; line 2 pos 5\n\u003cbr  /\u003eset zeppelin.spark.sql.stacktrace \u003d true to see full stacktrace )\u003c/li\u003e\n\u003cli\u003ePuis on affiche nos données via sql.\u003c/li\u003e\n\u003c/ul\u003e\n"
      },
      "dateCreated": "Feb 6, 2017 2:31:24 AM",
      "dateStarted": "Mar 9, 2017 11:03:58 AM",
      "dateFinished": "Mar 9, 2017 11:03:58 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "\n// transformation en table :\nnewdataset.registerTempTable(\"data\")\n//Lancer la requête sql directement sans ce changement donnait une erreur.",
      "dateUpdated": "Mar 9, 2017 9:38:51 AM",
      "config": {
        "colWidth": 5.0,
        "graph": {
          "mode": "table",
          "height": 94.21875762939453,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1489093787250_681983225",
      "id": "20170309-210947_1791657669",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nwarning: there was one deprecation warning; re-run with -deprecation for details\n"
      },
      "dateCreated": "Mar 9, 2017 9:09:47 AM",
      "dateStarted": "Mar 9, 2017 9:33:53 AM",
      "dateFinished": "Mar 9, 2017 9:33:54 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\nselect label, income,features\nfrom data",
      "dateUpdated": "Mar 9, 2017 9:45:56 AM",
      "config": {
        "colWidth": 7.0,
        "graph": {
          "mode": "table",
          "height": 146.875,
          "optionOpen": false,
          "keys": [
            {
              "name": "label",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "label",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1489095238877_712843047",
      "id": "20170309-213358_1494760001",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "label\tincome\tfeatures\n0.0\t \u003c\u003d50K\t(94,[4,10,24,32,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,38,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,23,38,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,23,29,47,49,62],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,11,23,31,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,18,28,34,44,49,64],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,8,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,11,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,31,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[4,10,23,29,43,50,52,61],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,32,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,24,33,44,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,12,23,30,43,50,52,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,16,23,37,43,51,52,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,24,39,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,35,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,11,25,31,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,20,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,26,34,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[6,18,23,39,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,40,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[2,10,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,30,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[3,9,23,36,43,50,52,65],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,31,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,14,24,41,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,45,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,25,31,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[6,9,23,32,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,9,23,34,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,35,46,48,52,59],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,35,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,32,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,33,43,48,52,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,14,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,18,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,10,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,26,32,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,38,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[6,10,23,29,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,11,25,31,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,12,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,24,29,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,31,47,53],[1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,45,48,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,17,23,29,47,48,91],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[6,10,25,31,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[5,8,25,31,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,21,23,35,43,48,52,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,23,34,43,48,52,59],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,32,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,16,28,36,44,48,52,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,20,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,40,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,32,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,32,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,9,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,9,24,36,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,29,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,26,33,45,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,10,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,35,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,29,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,45,48,52,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,23,32,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,15,23,36,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,34,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,16,23,39,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,23,34,43,48,52,62],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,34,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,25,30,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,33,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[2,8,23,41,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,11,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,18,24,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[6,20,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,30,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,35,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,33,47,50,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[2,10,23,41,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,9,24,38,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,20,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,25,31,46,48,63],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[6,8,24,34,45,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,11,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,11,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,40,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,15,24,36,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,38,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,8,24,32,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,38,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,33,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,17,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,8,23,34,43,48,52,58],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,33,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,35,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,18,23,38,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[5,9,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[2,12,23,30,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,34,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,31,45,49,52,57],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[4,10,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,34,45,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,32,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,14,23,32,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,8,23,36,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,24,33,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,25,40,44,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[6,11,23,29,43,48,52,76],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,23,32,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,30,43,50,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[5,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,34,45,48,52,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,12,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,40,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,37,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,34,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,27,34,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,9,25,36,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,9,25,32,46,48,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,32,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,31,50,56],[1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,30,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[3,8,25,36,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,38,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,9,26,33,46,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,26,34,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,22,25,36,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[5,11,25,31,46,50,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,31,44,50,63],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,11,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,34,46,48,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[6,14,24,31,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,11,27,41,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,38,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,12,27,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,8,23,41,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[4,10,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,28,33,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,30,45,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,38,44,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[2,9,23,31,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,32,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,30,44,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,16,23,35,43,48,52,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[6,9,23,32,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,32,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,10,25,31,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,10,25,36,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,11,23,29,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[4,20,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,35,44,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,10,23,30,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[6,10,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,21,23,37,48,52,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[6,11,24,31,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,11,23,29,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,24,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,11,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,8,24,36,45,48,52,67],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,9,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,8,25,32,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,33,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,34,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,8,23,33,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,33,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,8,23,37,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,44,51,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,30,43,50,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,16,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,24,31,44,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,25,33,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,23,33,43,48,52,72],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,15,24,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,38,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,22,25,36,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,44,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,32,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,24,35,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,33,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,15,25,36,44,51,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,39,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,27,32,44,48,73],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,32,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,26,37,44,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,33,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,32,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,30,53],[1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,17,24,29,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,8,23,34,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,9,24,32,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,76],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[2,11,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,37,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,34,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,14,23,41,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,9,24,36,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,32,43,48,52,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,32,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,14,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,32,43,48,52,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,17,23,29,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,23,32,47,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,15,27,34,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,9,24,32,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,37,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,8,23,39,43,50,52,86],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,26,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,27,31,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,16,25,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,25,29,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,34,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,9,23,31,43,50,52,88],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,9,24,36,45,48,52,58],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,30,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,18,24,34,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,11,23,39,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,11,24,29,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,29,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,38,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,31,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,40,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,35,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,29,44,48,57],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[2,9,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,25,33,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,25,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,38,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[6,11,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,17,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,34,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,31,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,16,23,30,43,48,52,82],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,10,24,41,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,40,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[5,10,25,33,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,11,23,36,47,50,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,30,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,32,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,34,44,50,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,32,47,50,87],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,32,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,24,40,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,14,23,32,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,9,23,39,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,11,23,31,43,50,52,74],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,9,24,36,45,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,10,25,29,44,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,35,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,9,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,21,23,35,48,54],[1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,40,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,27,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,37,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,31,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,11,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,39,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,12,24,36,45,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,29,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,38,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,37,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,30,44,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,32,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,24,34,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,15,23,32,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,21,24,34,48,52,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,30,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,11,24,29,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,33,46,49,52,75],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,34,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,24,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,12,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[4,8,23,41,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,39,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,9,24,41,45,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,10,24,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,13,23,36,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,12,25,36,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,28,34,44,48,52,76],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,29,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,34,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,13,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[3,10,23,36,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[6,8,23,32,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,27,34,46,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,12,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,32,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,18,23,30,43,48,52,77],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,15,23,34,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,11,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,25,31,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,28,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,9,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,24,33,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,25,31,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,33,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[6,9,24,32,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,34,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[4,12,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,35,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,30,44,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,9,24,32,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,30,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,11,25,31,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,37,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,21,25,30,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,33,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,9,23,37,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,26,35,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,32,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,32,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,48,53],[1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,34,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,14,26,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[4,10,23,31,43,48,52,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,38,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,8,24,36,48,53],[1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,38,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[4,10,23,41,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,25,40,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,16,23,38,43,52,59],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,11,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,32,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[3,9,23,36,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,9,25,34,44,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,38,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,31,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,20,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,9,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,19,25,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,22,23,35,43,48,52,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,34,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,13,26,35,44,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,8,25,37,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,38,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[4,10,23,31,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,39,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,15,24,30,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[6,11,24,29,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,38,44,48,52,68],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,8,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,11,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,8,27,36,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,13,24,36,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,10,28,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,14,23,34,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,30,45,50,52,56],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,11,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,8,24,39,44,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,9,24,41,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,32,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,9,23,32,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,29,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,32,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[6,8,24,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,18,24,30,48,52,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,27,31,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,30,43,51,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,13,24,36,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,35,45,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,9,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,14,23,31,43,49,52,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,8,23,33,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,12,23,35,43,50,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,31,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,37,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,9,23,36,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,24,39,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,8,23,37,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,22,28,30,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,40,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,32,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,37,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,11,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,40,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,24,29,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,9,24,36,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,37,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,25,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,30,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,18,24,34,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,38,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,15,24,34,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,23,30,43,48,52,77],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,9,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,10,24,29,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,28,30,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,19,24,36,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,28,32,45,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,22,23,36,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,8,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,10,25,29,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[6,8,25,32,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,24,31,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,29,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,30,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,32,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,35,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,21,24,34,45,48,52,60],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,8,23,36,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,8,24,39,44,48,52,72],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,8,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,32,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,34,46,48,80],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,33,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,31,44,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,41,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,8,26,32,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,34,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,28,38,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,21,27,36,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,24,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,12,27,36,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,32,44,51,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,9,24,36,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,9,24,36,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,9,25,38,44,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[2,9,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,25,35,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,33,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,32,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,11,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,25,35,46,59],[1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,35,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,34,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,14,23,31,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,17,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,19,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,22,27,42,44,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,26,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[5,10,24,39,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,8,24,36,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,20,24,29,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,38,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,37,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,38,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,15,23,34,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,9,23,41,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,38,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,30,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,9,25,31,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,26,34,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,27,32,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,35,47,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[6,12,25,30,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,35,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,26,32,46,48,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,40,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,23,34,43,48,52,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,37,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,38,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,10,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,38,45,51,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[5,11,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,16,26,34,46,48,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,26,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,11,25,31,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,30,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,33,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,12,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,20,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,47,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,19,24,36,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,14,25,33,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,10,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,9,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[3,9,23,36,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,10,24,40,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,32,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,34,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,15,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[5,10,25,29,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,8,23,36,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,8,23,36,47,50,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,16,24,37,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,29,43,48,52,58],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,32,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,33,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,9,24,36,46,51,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,17,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,40,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,40,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,32,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,16,25,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,18,23,34,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,14,24,39,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,32,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,11,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,30,44,51,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,8,26,31,44,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,15,24,34,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,11,25,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,38,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,10,24,29,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,34,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,38,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,37,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[5,10,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,17,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,33,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,27,34,44,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,18,27,42,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,18,28,38,46,48,52,60],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,39,45,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,9,24,34,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,15,26,34,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,32,47,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,38,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[5,21,23,37,43,48,52,62],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,20,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,38,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,20,26,29,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,8,25,32,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,8,23,36,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[4,10,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,34,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,31,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,20,23,29,43,50,52,74],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,9,26,31,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,35,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,9,24,32,46,50,56],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,18,27,36,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,16,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,19,23,38,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,11,24,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,29,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,11,24,29,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,14,25,29,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,9,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,30,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,13,28,36,45,50,65],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,18,24,35,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[6,9,25,31,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,13,24,36,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,13,24,39,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,8,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,33,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,19,24,34,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,32,43,48,52,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,27,31,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,8,24,41,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,12,23,30,43,48,52,77],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,9,26,31,46,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,13,24,32,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,31,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,16,24,36,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,10,23,29,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,11,24,31,44,48,52,68],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,9,23,39,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,35,45,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,29,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,10,24,40,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,14,24,36,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,11,24,29,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,11,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,29,45,48,72],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,33,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,10,24,29,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,27,33,46,48,62],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,38,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,9,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,20,25,29,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,25,31,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,19,23,34,43,49,52,64],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,44,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,34,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,32,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,26,29,44,48,52,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,10,25,32,46,48,91],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,26,34,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,8,24,40,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,29,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[2,8,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,24,29,44,48,52,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,33,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,34,43,48,52,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,13,23,31,43,48,52,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,32,44,50,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,23,32,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,24,34,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,9,23,36,47,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,44,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,10,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,27,34,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,34,48,53],[1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,11,24,31,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,24,40,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,19,24,38,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[2,10,23,29,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,32,45,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,30,45,49,52,75],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,10,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[4,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,29,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,15,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,37,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,38,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,24,30,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,10,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[6,8,23,32,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,39,44,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[2,8,23,32,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,8,25,41,46,48,52,77],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,20,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,24,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,15,26,34,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,9,28,34,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,33,47,48,57],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,10,25,33,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,35,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,39,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,21,26,39,44,48,52,70],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,30,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,12,23,40,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,12,25,40,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,32,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,11,23,29,43,48,52,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,40,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[4,9,23,30,43,48,52,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,24,35,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,12,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,9,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,24,33,44,53],[1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,32,44,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,39,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,19,24,35,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,8,23,36,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,8,24,36,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,12,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[5,10,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,9,24,36,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,33,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,34,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,35,44,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,11,24,40,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,63],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,25,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,45,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,13,24,39,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,32,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,33,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,11,28,36,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,37,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,26,34,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,9,24,36,45,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,31,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,32,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,15,24,39,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,34,47,48,67],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,24,32,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,11,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,24,40,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,27,32,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,27,37,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,27,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,26,35,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,32,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[5,10,24,33,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,13,23,36,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,32,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,38,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,13,27,36,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,32,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,25,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,31,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,27,39,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,33,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,10,27,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,29,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,8,25,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,30,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,11,27,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,25,32,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[4,20,25,29,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,37,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,8,24,32,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,34,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,29,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,24,31,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,32,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,39,43,48,52,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[5,9,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,15,24,38,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,13,24,33,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,9,23,39,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,10,26,29,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,37,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,11,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,10,23,33,43,50,52,66],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,21,25,34,46,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,38,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,25,32,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,32,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,18,25,35,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,32,48,52,56],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,30,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,9,23,36,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,31,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[5,9,23,30,43,48,52,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,33,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,25,40,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,9,25,36,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,10,24,31,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,23,32,47,50,61],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,17,23,39,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,11,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,33,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,31,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,16,23,34,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,18,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,38,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,14,23,36,45,51,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,35,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,35,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,29,45,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,25,38,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,40,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,15,23,39,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,30,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,33,45,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,11,23,29,47,50,65],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,8,23,31,43,50,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,34,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,37,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,21,23,35,47,48,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,32,47,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,8,23,36,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,11,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,22,28,42,44,48,70],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,35,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,9,24,36,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,23,34,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,32,47,48,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,13,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,11,24,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,17,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,24,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,25,34,46,51,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,35,43,49,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,8,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,9,25,31,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,32,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,10,23,31,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,25,30,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,9,25,39,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[4,8,23,29,47,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,11,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,16,27,34,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,15,23,30,43,48,52,55],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,9,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[2,15,25,37,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[1,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,14,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,35,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,23,30,43,48,52,54],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,15,25,31,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,37,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,34,45,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,9,23,33,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,23,31,43,50,52,61],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,12,27,36,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,40,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,10,27,31,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,37,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,33,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,24,31,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[4,11,23,29,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,27,34,44,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,38,45,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,32,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,14,24,32,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[3,8,24,36,46,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,24,39,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[2,8,27,41,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,25,34,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,30,45,49,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,32,46,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,25,30,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,27,29,44,48,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,10,24,33,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,12,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[1,8,23,30,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,32,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,8,24,31,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[0,8,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,11,25,29,44,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[6,10,25,31,46,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n0.0\t \u003c\u003d50K\t(94,[0,9,23,35,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n1.0\t \u003e50K\t(94,[5,10,23,31,43,48,52,53],[1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0])\n\n\u003cfont color\u003dred\u003eResults are limited by 1000.\u003c/font\u003e"
      },
      "dateCreated": "Mar 9, 2017 9:33:58 AM",
      "dateStarted": "Mar 9, 2017 9:41:37 AM",
      "dateFinished": "Mar 9, 2017 9:41:38 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Explication 2/2",
      "text": "%md\n\nOn voit clairement que nos données sont entièrements binarisés :\n* La colonne label présente l\u0027appartenance à une des deux catégories d\u0027income : 1 \u003d\u003e \u003e50K    0 \u003d\u003e \u003c\u003d50k\n* la colonne features résume l\u0027intégralité des colonnes binarisés.\n\nOn peut donc maintenant nous tourner vers notre prédiction.\n\n\n\n\n\n\n-------------------------------------------------------------------------------------------------------------------------\n-------------------------------------------------------------------------------------------------------------------------\n-------------------------------------------------------------------------------------------------------------------------\n-------------------------------------------------------------------------------------------------------------------------\n\n\n\n\u003chr\u003e\n\n\u003ch4 style\u003d\"color:red;\"\u003eExercice\u003c/h4\u003e\n\nAvant de nous lancer dans notre exercice de prédiction, on doit scinder nos données en deux parties :\n* Une partie training/apprentissage qui va nous permettre d\u0027effectuer nos tests de prédiction sur nos données.\n* Une partie test qui nous servira à vérifier notre prédiction.\n\nPour cette opération, nous allons utiliser la fonction randomsplit\n\n",
      "dateUpdated": "Mar 9, 2017 11:03:52 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 87.55208587646484,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1489095317753_-246812655",
      "id": "20170309-213517_906214689",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003eOn voit clairement que nos données sont entièrements binarisés :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eLa colonne label présente l\u0027appartenance à une des deux catégories d\u0027income : 1 \u003d\u003e \u003e50K    0 \u003d\u003e \u0026lt;\u003d50k\u003c/li\u003e\n\u003cli\u003ela colonne features résume l\u0027intégralité des colonnes binarisés.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOn peut donc maintenant nous tourner vers notre prédiction.\u003c/p\u003e\n\u003chr /\u003e\n\u003chr /\u003e\n\u003chr /\u003e\n\u003chr /\u003e\n\u003chr\u003e\n\u003ch4 style\u003d\"color:red;\"\u003eExercice\u003c/h4\u003e\n\u003cp\u003eAvant de nous lancer dans notre exercice de prédiction, on doit scinder nos données en deux parties :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUne partie training/apprentissage qui va nous permettre d\u0027effectuer nos tests de prédiction sur nos données.\u003c/li\u003e\n\u003cli\u003eUne partie test qui nous servira à vérifier notre prédiction.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ePour cette opération, nous allons utiliser la fonction randomsplit\u003c/p\u003e\n"
      },
      "dateCreated": "Mar 9, 2017 9:35:17 AM",
      "dateStarted": "Mar 9, 2017 11:03:51 AM",
      "dateFinished": "Mar 9, 2017 11:03:51 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Partage des données en deux jeux ",
      "text": "val partage \u003d newdataset.randomSplit(Array(0.7, 0.3))\r\nval (training, test) \u003d (partage(0), partage(1))\r\n",
      "dateUpdated": "Mar 10, 2017 7:02:24 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1489097589451_-1799518836",
      "id": "20170309-221309_861087124",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\npartage: Array[org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]] \u003d Array([age: double, workclass: string ... 31 more fields], [age: double, workclass: string ... 31 more fields])\n\n\ntraining: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [age: double, workclass: string ... 31 more fields]\ntest: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [age: double, workclass: string ... 31 more fields]\n"
      },
      "dateCreated": "Mar 9, 2017 10:13:09 AM",
      "dateStarted": "Mar 10, 2017 7:02:24 PM",
      "dateFinished": "Mar 10, 2017 7:02:27 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md \n\n## 5) Création de modèle\n\nMaintenant que nos données sont prêtes, on peut utiliser un des algorithmes présent dans l\u0027API ML Pipeline.\n\nNous avons le choix entre :\n- [Binomial Logistic regression](http://spark.apache.org/docs/latest/ml-classification-regression.html#binomial-logistic-regression)\n- [Decision trees](http://spark.apache.org/docs/latest/ml-classification-regression.html#decision-trees)\n- [Random forest](http://spark.apache.org/docs/latest/ml-classification-regression.html#random-forests)\n\nLes étapes pour construire le modèle sont les suivantes :\n- Créer un modèle sur le jeu d\u0027apprentissage (training)\n- Utiliser ce modèle pour faire des prédictions sur le jeu de tes\n- Evaluer la qualité de la prédiction.\n\nNous allons utiliser la `BinaryClassificationEvaluator` pour évaluer notre modèle. La métrique par défaut utilisée ici est :\n[areaUnderROC](https://en.wikipedia.org/wiki/Receiver_operating_characteristic#Area_under_the_curve).\n\n\u003ch4 style\u003d\"color:red;\"\u003eExercice\u003c/h4\u003e\n* Tester l\u0027un des trois modèle de machine learning sur le jeu d\u0027apprentissage de manière à obtenir un estimateur.\n* Utiliser l\u0027estimateur sur le jeu de test pour créer une colonne de prédiction\n* Utiliser `BinaryClassificationEvaluator.evaluate()` pour évaluer notre prédiction.\n\n",
      "dateUpdated": "Mar 9, 2017 11:06:20 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1486114303097_-616679895",
      "id": "20170203-093143_100322687",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e5) Création de modèle\u003c/h2\u003e\n\u003cp\u003eMaintenant que nos données sont prêtes, on peut utiliser un des algorithmes présent dans l\u0027API ML Pipeline.\u003c/p\u003e\n\u003cp\u003eNous avons le choix entre :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d\"http://spark.apache.org/docs/latest/ml-classification-regression.html#binomial-logistic-regression\"\u003eBinomial Logistic regression\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d\"http://spark.apache.org/docs/latest/ml-classification-regression.html#decision-trees\"\u003eDecision trees\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d\"http://spark.apache.org/docs/latest/ml-classification-regression.html#random-forests\"\u003eRandom forest\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eLes étapes pour construire le modèle sont les suivantes :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCréer un modèle sur le jeu d\u0027apprentissage (training)\u003c/li\u003e\n\u003cli\u003eUtiliser ce modèle pour faire des prédictions sur le jeu de tes\u003c/li\u003e\n\u003cli\u003eEvaluer la qualité de la prédiction.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNous allons utiliser la \u003ccode\u003eBinaryClassificationEvaluator\u003c/code\u003e pour évaluer notre modèle. La métrique par défaut utilisée ici est :\n\u003cbr  /\u003e\u003ca href\u003d\"https://en.wikipedia.org/wiki/Receiver_operating_characteristic#Area_under_the_curve\"\u003eareaUnderROC\u003c/a\u003e.\u003c/p\u003e\n\u003ch4 style\u003d\"color:red;\"\u003eExercice\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eTester l\u0027un des trois modèle de machine learning sur le jeu d\u0027apprentissage de manière à obtenir un estimateur.\u003c/li\u003e\n\u003cli\u003eUtiliser l\u0027estimateur sur le jeu de test pour créer une colonne de prédiction\u003c/li\u003e\n\u003cli\u003eUtiliser \u003ccode\u003eBinaryClassificationEvaluator.evaluate()\u003c/code\u003e pour évaluer notre prédiction.\u003c/li\u003e\n\u003c/ul\u003e\n"
      },
      "dateCreated": "Feb 3, 2017 9:31:43 AM",
      "dateStarted": "Mar 9, 2017 11:06:14 AM",
      "dateFinished": "Mar 9, 2017 11:06:14 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Binomial Logistic Regression",
      "text": "// Import de notre méthode de prédiction\r\nimport org.apache.spark.ml.classification.LogisticRegression\r\n\r\n// Initiation du modele de machine learning\r\nval lr \u003d new LogisticRegression()\r\n  .setMaxIter(20)\r\n  .setRegParam(0.3)\r\n  .setElasticNetParam(0.001)\r\n\r\n//  Création de l\u0027estimateur \r\nval lrModel \u003d lr.fit(training)\r\n\r\n\r\n// Print the coefficients and intercept for logistic regression\r\nprintln(s\"Coefficients: ${lrModel.coefficients} Intercept: ${lrModel.intercept}\")\r\n\r\n\r\n\r\n\r\n",
      "dateUpdated": "Mar 10, 2017 7:15:23 PM",
      "config": {
        "colWidth": 5.0,
        "graph": {
          "mode": "table",
          "height": 535.3298950195312,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "title": true,
        "editorMode": "ace/mode/scala",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1489171886297_1925860129",
      "id": "20170310-185126_686021344",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nimport org.apache.spark.ml.classification.LogisticRegression\n\nlr: org.apache.spark.ml.classification.LogisticRegression \u003d logreg_d05e04ff3e4b\n\nlrModel: org.apache.spark.ml.classification.LogisticRegressionModel \u003d logreg_d05e04ff3e4b\nCoefficients: [-0.06347500552345908,-0.045105392095082485,0.029958475901744504,-0.16548061034889716,-0.031224853105042825,0.3602418511541759,0.2343387182144001,-0.42466409987270726,-0.17163032784673726,-0.075332887514051,0.32450908760043845,0.4722668269563359,0.04223467767502749,-0.2658487712019288,0.051679224872699096,-0.27565138323922234,-0.3737607647801869,0.7032405181771608,-0.3470556908921725,-0.22635474591232435,0.7306018567115868,-0.28938992617268716,-0.31035917407987135,0.4155755972467604,-0.34141058873738456,-0.15568425479117248,-0.1978869320879655,-0.12978658616741093,-0.16687419785357496,0.2984397893566682,-0.039825620043295984,0.385374750785917,-0.10839998992429976,0.06731601222634266,-0.2909220751521459,-0.18112045749492875,-0.1659572603914166,-0.07392846292730854,-0.2555991455173466,-0.26815842251921435,0.15972767390060746,0.128605719250841,-0.2746906171606069,0.3523618830750926,-0.17064080876129736,-0.326915266041916,-0.2210215930607799,0.44733242100222076,0.05821668767743174,-0.11609802870405128,-0.01847704894055376,-0.17102530324552462,0.18917912950588128,0.02122508017161311,-0.2895080107765684,-0.07200257510581726,0.042369396034755064,-0.002255457241567612,0.12005862694400114,-0.1782579386434522,-0.2227687626734779,0.1264034186423339,0.0023539463908771297,0.07261346357595769,-0.028960809937195957,-0.013501841998696498,-0.13604487864805553,0.16764434416606505,-0.3145678745539304,-0.18075437404205824,-0.17753648811044426,0.06950300970868825,-0.06734066051629704,-0.3764096947499275,0.05503812534875584,-0.15164400923026491,0.0059904753764954115,-0.11817624440890698,-0.3141450233269136,-0.21781477020888637,0.3056149706133359,-0.06796503840570332,-0.04615769489654314,0.12146465268082778,-0.08579908935428619,-0.04646188604520375,0.0017834992403573126,-0.15141955635566176,-0.13179357883233334,-0.031202184162207745,-0.36264139922831945,-0.13795000246649733,-0.06276187520570493,-0.014292325262885685] Intercept: -1.5664430372398794\n"
      },
      "dateCreated": "Mar 10, 2017 6:51:26 PM",
      "dateStarted": "Mar 10, 2017 7:11:56 PM",
      "dateFinished": "Mar 10, 2017 7:12:04 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Binary Classification Evaluator",
      "text": "// Import de la bibliothèque pour évaluer la prédiction.\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\n\n\n// Exécution de l\u0027estimateur sur les données test issues du dataset\nval datasetEstimated \u003d lrModel.transform(test);\n\n// Evaluation des prédictions grâce à BinaryClassificationEvaluator\nval bce \u003d new BinaryClassificationEvaluator()\n\n// % de prédiction juste\nbce.evaluate(datasetEstimated)\n\n// Résultat en fonction du paramètrage \n\n\n// Affichage des erreurs d\u0027estimation\ndatasetEstimated.filter($\"label\" !\u003d\u003d $\"prediction\").select(\"workclass\", \"education\", \"sex\", \"label\",\"prediction\").show()\n\n",
      "dateUpdated": "Mar 10, 2017 7:15:10 PM",
      "config": {
        "colWidth": 7.0,
        "graph": {
          "mode": "table",
          "height": 262.22222900390625,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "tableHide": false,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1489171891876_910138357",
      "id": "20170310-185131_2087968381",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\n\ndatasetEstimated: org.apache.spark.sql.DataFrame \u003d [age: double, workclass: string ... 34 more fields]\n\nbce: org.apache.spark.ml.evaluation.BinaryClassificationEvaluator \u003d binEval_93ca1df0aed2\n\nres41: Double \u003d 0.8764864403578281\n\nwarning: there was one deprecation warning; re-run with -deprecation for details\n+-----------------+-------------+-------+-----+----------+\n|        workclass|    education|    sex|label|prediction|\n+-----------------+-------------+-------+-----+----------+\n|          Private|   Assoc-acdm| Female|  1.0|       0.0|\n|          Private|    Bachelors| Female|  1.0|       0.0|\n|          Private|    Bachelors| Female|  1.0|       0.0|\n|          Private|      HS-grad|   Male|  1.0|       0.0|\n| Self-emp-not-inc| Some-college|   Male|  1.0|       0.0|\n|        State-gov|         12th|   Male|  1.0|       0.0|\n|        State-gov|    Bachelors|   Male|  0.0|       1.0|\n|          Private| Some-college|   Male|  1.0|       0.0|\n|          Private|    Bachelors| Female|  1.0|       0.0|\n|          Private|    Bachelors|   Male|  0.0|       1.0|\n| Self-emp-not-inc|         11th|   Male|  1.0|       0.0|\n|        Local-gov| Some-college|   Male|  1.0|       0.0|\n|          Private|    Assoc-voc|   Male|  1.0|       0.0|\n|          Private|      HS-grad| Female|  1.0|       0.0|\n|          Private|    Bachelors| Female|  0.0|       1.0|\n|          Private|    Bachelors|   Male|  0.0|       1.0|\n|          Private|    Bachelors|   Male|  1.0|       0.0|\n|          Private|      HS-grad| Female|  1.0|       0.0|\n|          Private|    Bachelors| Female|  1.0|       0.0|\n|          Private|    Bachelors|   Male|  0.0|       1.0|\n+-----------------+-------------+-------+-----+----------+\nonly showing top 20 rows\n\n"
      },
      "dateCreated": "Mar 10, 2017 6:51:31 PM",
      "dateStarted": "Mar 10, 2017 7:12:08 PM",
      "dateFinished": "Mar 10, 2017 7:12:18 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Explication :",
      "text": "%md\n\nEnfin ! Nous sommes enfin arrivé à notre prédiction !\nNous avons choisit de prendre la *Binomial Logistic Regression* .\n\nAprès avoir essayer plusieurs type de paramètrage (ceci afin d\u0027améliorer notre prédiction), nous obtenons des résultats sensiblement identique.\n\n\n\n**Résultat :**\n\n  .setMaxIter(10)\n  .setRegParam(0.3)\n  .setElasticNetParam(0.08)\n  \u003d\u003e 85.98%\n  \n  \n  .setMaxIter(10)\n  .setRegParam(0.3)\n  .setElasticNetParam(0.001)\n \u003d\u003e 87.65%\n \n   .setMaxIter(20)\n  .setRegParam(0.3)\n  .setElasticNetParam(0.001)\n  \u003d\u003e 87.64%\n  \n  \n  Néanmoins, les taux de prédictions étant autour de 85%, notre modèle est robuste.\n  \n  (J\u0027avoue ne pas avoir la moindre idée de comment améliorer la prédiction celà étant :) )\n  \n  ",
      "dateUpdated": "Mar 10, 2017 7:25:59 PM",
      "config": {
        "colWidth": 7.0,
        "graph": {
          "mode": "table",
          "height": 276.1111145019531,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorHide": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1489173000055_463959328",
      "id": "20170310-191000_1911299784",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003eEnfin ! Nous sommes enfin arrivé à notre prédiction !\n\u003cbr  /\u003eNous avons choisit de prendre la \u003cem\u003eBinomial Logistic Regression\u003c/em\u003e .\u003c/p\u003e\n\u003cp\u003eAprès avoir essayer plusieurs type de paramètrage (ceci afin d\u0027améliorer notre prédiction), nous obtenons des résultats sensiblement identique.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRésultat :\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e.setMaxIter(10)\n\u003cbr  /\u003e.setRegParam(0.3)\n\u003cbr  /\u003e.setElasticNetParam(0.08)\n\u003cbr  /\u003e\u003d\u003e 85.98%\u003c/p\u003e\n\u003cp\u003e.setMaxIter(10)\n\u003cbr  /\u003e.setRegParam(0.3)\n\u003cbr  /\u003e.setElasticNetParam(0.001)\n\u003cbr  /\u003e\u003d\u003e 87.65%\u003c/p\u003e\n\u003cp\u003e.setMaxIter(20)\n\u003cbr  /\u003e.setRegParam(0.3)\n\u003cbr  /\u003e.setElasticNetParam(0.001)\n\u003cbr  /\u003e\u003d\u003e 87.64%\u003c/p\u003e\n\u003cp\u003eNéanmoins, les taux de prédictions étant autour de 85%, notre modèle est robuste.\u003c/p\u003e\n\u003cp\u003e(J\u0027avoue ne pas avoir la moindre idée de comment améliorer la prédiction celà étant :) )\u003c/p\u003e\n"
      },
      "dateCreated": "Mar 10, 2017 7:10:00 PM",
      "dateStarted": "Mar 10, 2017 7:25:57 PM",
      "dateFinished": "Mar 10, 2017 7:25:57 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n\u003ch4 style\u003d\"color:red;\"\u003eOptional question\u003c/h4\u003e\n\nUse [cross-validation](http://spark.apache.org/docs/latest/ml-tuning.html#cross-validation) to select the best hyperparameters for your model",
      "dateUpdated": "Feb 7, 2017 12:55:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1486412170872_-693891339",
      "id": "20170206-201610_429327674",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch4 style\u003d\"color:red;\"\u003eOptional question\u003c/h4\u003e\n\u003cp\u003eUse \u003ca href\u003d\"http://spark.apache.org/docs/latest/ml-tuning.html#cross-validation\"\u003ecross-validation\u003c/a\u003e to select the best hyperparameters for your model\u003c/p\u003e\n"
      },
      "dateCreated": "Feb 6, 2017 8:16:10 AM",
      "dateStarted": "Feb 7, 2017 12:55:45 PM",
      "dateFinished": "Feb 7, 2017 12:55:45 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n\u003ch4 style\u003d\"color:red;\"\u003eOptional question\u003c/h4\u003e\n\nThe column `features` is a Vector, and Spark MLlib has specific functions to analyse it. You can `collect()` the column into an array then `map` each `Row` into a `Vector`.\n\n```\nimport org.apache.spark.mllib.linalg.Vector\n\ndf.select(\"features\").rdd.map(t \u003d\u003e t.getAs[Vector](0))\n```\n\n1. Run [basic statistics](http://spark.apache.org/docs/latest/mllib-statistics.html) on the column which contains your features vector.\n2. Check for the columns that are the most [correlated](http://spark.apache.org/docs/latest/mllib-statistics.html#correlations) to your label column.\n3. Conclude on the interesting columns to use if you had to do manual feature selection. Don\u0027t forget the nature of the data you are dealing with.",
      "dateUpdated": "Feb 7, 2017 12:55:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1486114332673_-1809154654",
      "id": "20170203-093212_958935340",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch4 style\u003d\"color:red;\"\u003eOptional question\u003c/h4\u003e\n\u003cp\u003eThe column \u003ccode\u003efeatures\u003c/code\u003e is a Vector, and Spark MLlib has specific functions to analyse it. You can \u003ccode\u003ecollect()\u003c/code\u003e the column into an array then \u003ccode\u003emap\u003c/code\u003e each \u003ccode\u003eRow\u003c/code\u003e into a \u003ccode\u003eVector\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eimport org.apache.spark.mllib.linalg.Vector\n\ndf.select(\"features\").rdd.map(t \u003d\u0026gt; t.getAs[Vector](0))\n\u003c/code\u003e\u003c/pre\u003e\n\u003col\u003e\n\u003cli\u003eRun \u003ca href\u003d\"http://spark.apache.org/docs/latest/mllib-statistics.html\"\u003ebasic statistics\u003c/a\u003e on the column which contains your features vector.\u003c/li\u003e\n\u003cli\u003eCheck for the columns that are the most \u003ca href\u003d\"http://spark.apache.org/docs/latest/mllib-statistics.html#correlations\"\u003ecorrelated\u003c/a\u003e to your label column.\u003c/li\u003e\n\u003cli\u003eConclude on the interesting columns to use if you had to do manual feature selection. Don\u0027t forget the nature of the data you are dealing with.\u003c/li\u003e\n\u003c/ol\u003e\n"
      },
      "dateCreated": "Feb 3, 2017 9:32:12 AM",
      "dateStarted": "Feb 7, 2017 12:55:45 PM",
      "dateFinished": "Feb 7, 2017 12:55:45 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "dateUpdated": "Mar 9, 2017 11:07:07 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1489100816805_528821688",
      "id": "20170309-230656_1979126880",
      "dateCreated": "Mar 9, 2017 11:06:56 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "BinaryClassification",
  "id": "2C76YWXDZ",
  "angularObjects": {
    "2CBSEXPFN:shared_process": [],
    "2CACFPDTC:shared_process": [],
    "2CCTW114Z:shared_process": [],
    "2CB7Q4ENT:shared_process": [],
    "2CASA9CZ7:shared_process": [],
    "2CB7BSJ5U:shared_process": [],
    "2CBABUD1U:shared_process": [],
    "2CD2QMYAV:shared_process": [],
    "2CD1WVQCH:shared_process": [],
    "2CBQW8EB4:shared_process": [],
    "2CCKVN1M2:shared_process": [],
    "2CDFNWKGT:shared_process": [],
    "2CA9DESSC:shared_process": [],
    "2CBVGHDW8:shared_process": [],
    "2CA9GXC3M:shared_process": [],
    "2CBHGU4CT:shared_process": [],
    "2CDWQ76C6:shared_process": [],
    "2CCAHCE1U:shared_process": []
  },
  "config": {},
  "info": {}
}